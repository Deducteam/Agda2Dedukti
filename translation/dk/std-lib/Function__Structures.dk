TYPE__IsCongruent : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> Type.
IsCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f] Agda.Term _ (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) --> TYPE__IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))).
def IsCongruent__cong : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Function__Definitions.Congruent a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
def {|IsCongruent__isEquivalence₁|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Relation__Binary__Structures.IsEquivalence a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|})))))))))))))))))).
def {|IsCongruent__isEquivalence₂|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b {|ℓ₂|}))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Relation__Binary__Structures.IsEquivalence b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|})))))))))))))))))).
def {|IsCongruent__Eq₁__setoid|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max b (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max b (univ.max (univ.s {|ℓ₁|}) {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max b (univ.max (univ.s {|ℓ₁|}) {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ₁|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Relation__Binary__Bundles.Setoid a {|ℓ₁|}))))))))))))))))).
def {|IsCongruent__Eq₂__setoid|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max (univ.s b) (univ.s {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Relation__Binary__Bundles.Setoid b {|ℓ₂|}))))))))))))))))).
{|IsCongruent'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (cong => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Structures.IsEquivalence a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|})) ({|isEquivalence₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b {|ℓ₂|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Structures.IsEquivalence b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|})) ({|isEquivalence₂|} => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, y] Agda.etaExpand _ (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) y --> {|IsCongruent'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsCongruent__cong a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Relation__Binary__Structures.IsEquivalence a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|})) ({|IsCongruent__isEquivalence₁|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Relation__Binary__Structures.IsEquivalence b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|})) ({|IsCongruent__isEquivalence₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, cong, {|isEquivalence₁|}, {|isEquivalence₂|}] IsCongruent__cong a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsCongruent'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} cong {|isEquivalence₁|} {|isEquivalence₂|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) cong.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, cong, {|isEquivalence₁|}, {|isEquivalence₂|}] {|IsCongruent__isEquivalence₁|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsCongruent'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} cong {|isEquivalence₁|} {|isEquivalence₂|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Relation__Binary__Structures.IsEquivalence a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|})) {|isEquivalence₁|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, cong, {|isEquivalence₁|}, {|isEquivalence₂|}] {|IsCongruent__isEquivalence₂|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsCongruent'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} cong {|isEquivalence₁|} {|isEquivalence₂|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Relation__Binary__Structures.IsEquivalence b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|})) {|isEquivalence₂|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, r] {|IsCongruent__Eq₁__setoid|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f r --> Agda.etaExpand (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ₁|}))) (Relation__Binary__Bundles.Setoid a {|ℓ₁|}) (Relation__Binary__Bundles.{|Setoid'constructor|} a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Relation__Binary__Structures.IsEquivalence a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|})) ({|IsCongruent__isEquivalence₁|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) r))).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, r] {|IsCongruent__Eq₂__setoid|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f r --> Agda.etaExpand (univ.max univ.0 (univ.max (univ.s b) (univ.s {|ℓ₂|}))) (Relation__Binary__Bundles.Setoid b {|ℓ₂|}) (Relation__Binary__Bundles.{|Setoid'constructor|} b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Relation__Binary__Structures.IsEquivalence b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|})) ({|IsCongruent__isEquivalence₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) r))).
 

TYPE__IsInjection : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> Type.
IsInjection : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f] Agda.Term _ (IsInjection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) --> TYPE__IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))).
def IsInjection__isCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
def IsInjection__injective : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Function__Definitions.Injective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
{|IsInjection'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (isCongruent => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Injective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) ({|injective|} => (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, y] Agda.etaExpand _ (IsInjection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) y --> {|IsInjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsInjection__isCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Injective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsInjection__injective a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, isCongruent, {|injective|}] IsInjection__isCongruent a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsInjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} isCongruent {|injective|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) isCongruent.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, isCongruent, {|injective|}] IsInjection__injective a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsInjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} isCongruent {|injective|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Injective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) {|injective|}.
 

TYPE__IsSurjection : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> Type.
IsSurjection : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f] Agda.Term _ (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) --> TYPE__IsSurjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))).
def IsSurjection__isCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
def IsSurjection__surjective : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|})))) (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))))))))))))))))))).
{|IsSurjection'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (isCongruent => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))) (surjective => (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, y] Agda.etaExpand _ (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) y --> {|IsSurjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsSurjection__isCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y0 => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y0))))) (IsSurjection__surjective a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, isCongruent, surjective] IsSurjection__isCongruent a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsSurjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} isCongruent surjective) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) isCongruent.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, isCongruent, surjective] IsSurjection__surjective a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsSurjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} isCongruent surjective) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))) surjective.
 

TYPE__IsBijection : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> Type.
IsBijection : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f] Agda.Term _ (IsBijection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) --> TYPE__IsBijection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))).
def IsBijection__isInjection : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsBijection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
def IsBijection__surjective : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|})))) (IsBijection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))))))))))))))))))).
def IsBijection__bijective : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsBijection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (Function__Definitions.Bijective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
def IsBijection__isSurjection : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsBijection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (r => (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))).
{|IsBijection'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (isInjection => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))) (surjective => (IsBijection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, y] Agda.etaExpand _ (IsBijection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f) y --> {|IsBijection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsBijection__isInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y0 => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y0))))) (IsBijection__surjective a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, isInjection, surjective] IsBijection__isInjection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsBijection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} isInjection surjective) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) isInjection.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, isInjection, surjective] IsBijection__surjective a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f ({|IsBijection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} isInjection surjective) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))) surjective.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, r] IsBijection__bijective a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f r --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Function__Definitions.Bijective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (Agda__Builtin__Sigma.{|_,_|} (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|}))) (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Function__Definitions.Injective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (x => Function__Definitions__Core2.Surjective b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) a A (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Injective a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsInjection__injective a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (IsBijection__isInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) r))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Function__Definitions__Core2.Surjective b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) a A (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsBijection__surjective a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) r))).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, r] IsBijection__isSurjection a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f r --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsSurjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) ({|IsSurjection'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsInjection__isCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (IsBijection__isInjection a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) r))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b {|ℓ₂|}))) (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max {|ℓ₂|} a))) B (y => (Agda__Builtin__Sigma.{|Σ|} a {|ℓ₂|} A (x => Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))) (Agda.etaExpand b B y))))) (IsBijection__surjective a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) r))).
 

TYPE__IsLeftInverse : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> (g : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> Type.
IsLeftInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g] Agda.Term _ (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g) --> TYPE__IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))).
def IsLeftInverse__isCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))).
def {|IsLeftInverse__cong₂|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))).
def {|IsLeftInverse__inverseˡ|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b {|ℓ₂|}))) (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A (g (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))))))))))))))))))))).
{|IsLeftInverse'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (isCongruent => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|cong₂|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b {|ℓ₂|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A (g (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))) ({|inverseˡ|} => (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, y] Agda.etaExpand _ (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g) y --> {|IsLeftInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsLeftInverse__isCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|IsLeftInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A (g (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))) ({|IsLeftInverse__inverseˡ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isCongruent, {|cong₂|}, {|inverseˡ|}] IsLeftInverse__isCongruent a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsLeftInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isCongruent {|cong₂|} {|inverseˡ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) isCongruent.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isCongruent, {|cong₂|}, {|inverseˡ|}] {|IsLeftInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsLeftInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isCongruent {|cong₂|} {|inverseˡ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) {|cong₂|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isCongruent, {|cong₂|}, {|inverseˡ|}] {|IsLeftInverse__inverseˡ|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsLeftInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isCongruent {|cong₂|} {|inverseˡ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A (g (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))) {|inverseˡ|}.
 

TYPE__IsRightInverse : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> (g : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> Type.
IsRightInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g] Agda.Term _ (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g) --> TYPE__IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))).
def IsRightInverse__isCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))).
def {|IsRightInverse__cong₂|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))).
def {|IsRightInverse__inverseʳ|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))))))))))))))))))))).
{|IsRightInverse'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (isCongruent => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|cong₂|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|inverseʳ|} => (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, y] Agda.etaExpand _ (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g) y --> {|IsRightInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsRightInverse__isCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|IsRightInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|IsRightInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isCongruent, {|cong₂|}, {|inverseʳ|}] IsRightInverse__isCongruent a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsRightInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isCongruent {|cong₂|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) isCongruent.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isCongruent, {|cong₂|}, {|inverseʳ|}] {|IsRightInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsRightInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isCongruent {|cong₂|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) {|cong₂|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isCongruent, {|cong₂|}, {|inverseʳ|}] {|IsRightInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsRightInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isCongruent {|cong₂|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) {|inverseʳ|}.
 

TYPE__IsInverse : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> (g : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> Type.
IsInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g] Agda.Term _ (IsInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g) --> TYPE__IsInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))).
def IsInverse__isLeftInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))).
def {|IsInverse__inverseʳ|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (IsInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))))))))))))))))))))).
def IsInverse__isRightInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))).
def IsInverse__inverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (r => (Function__Definitions.{|Inverseᵇ|} a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))).
{|IsInverse'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) (g => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (isLeftInverse => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|inverseʳ|} => (IsInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, y] Agda.etaExpand _ (IsInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g) y --> {|IsInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (IsInverse__isLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|IsInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isLeftInverse, {|inverseʳ|}] IsInverse__isLeftInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isLeftInverse {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) isLeftInverse.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, isLeftInverse, {|inverseʳ|}] {|IsInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g ({|IsInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))} isLeftInverse {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) {|inverseʳ|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, r] IsInverse__isRightInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g r --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsRightInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|IsRightInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) (IsLeftInverse__isCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (IsInverse__isLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) r))) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|IsLeftInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (IsInverse__isLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) r))) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A (g (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|IsInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) r))).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, g, r] IsInverse__inverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f g r --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Function__Definitions.{|Inverseᵇ|} a b {|ℓ₁|} {|ℓ₂|} A B (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (Agda__Builtin__Sigma.{|_,_|} (univ.max univ.0 (univ.max b {|ℓ₂|})) (univ.max univ.0 (univ.max a {|ℓ₁|})) (Function__Definitions__Core2.{|Inverseˡ|} b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) a A (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (x => Function__Definitions__Core1.{|Inverseʳ|} a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) b B (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) (Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Function__Definitions__Core2.{|Inverseˡ|} b {|ℓ₂|} B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) a A (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|IsLeftInverse__inverseˡ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) (IsInverse__isLeftInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) r))) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Function__Definitions__Core1.{|Inverseʳ|} a {|ℓ₁|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) b B (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0)))) ({|IsInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A (g (Agda.etaExpand b B _0))) r))).
 

TYPE__IsBiEquivalence : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> ({|g₁|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> ({|g₂|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> Type.
IsBiEquivalence : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}] Agda.Term _ (IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|}) --> TYPE__IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))).
def {|IsBiEquivalence__f-isCongruent|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))))).
def {|IsBiEquivalence__cong₂|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))))))))))))))))))))))).
def {|IsBiEquivalence__cong₃|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))))))))))))))))))))))).
{|IsBiEquivalence'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) ({|f-isCongruent|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))) ({|cong₂|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) ({|cong₃|} => (IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))))))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, y] Agda.etaExpand _ (IsBiEquivalence a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|}) y --> {|IsBiEquivalence'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) ({|IsBiEquivalence__f-isCongruent|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))) ({|IsBiEquivalence__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) ({|IsBiEquivalence__cong₃|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|cong₃|}] {|IsBiEquivalence__f-isCongruent|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiEquivalence'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|cong₃|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) {|f-isCongruent|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|cong₃|}] {|IsBiEquivalence__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiEquivalence'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|cong₃|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))) {|cong₂|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|cong₃|}] {|IsBiEquivalence__cong₃|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiEquivalence'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|cong₃|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) {|cong₃|}.
 

TYPE__IsBiInverse : (a : univ.Lvl) -> (b : univ.Lvl) -> ({|ℓ₁|} : univ.Lvl) -> ({|ℓ₂|} : univ.Lvl) -> (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) -> ({|_≈₁_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Relation__Binary__Core.Rel a A {|ℓ₁|})) -> (B : Agda.Term (Agda.set (univ.s b)) (Agda.code (Agda.set b))) -> ({|_≈₂_|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Relation__Binary__Core.Rel b B {|ℓ₂|})) -> (f : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B))) -> ({|g₁|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> ({|g₂|} : Agda.Term (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A))) -> Type.
IsBiInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.code (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}] Agda.Term _ (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|}) --> TYPE__IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))).
def {|IsBiInverse__f-isCongruent|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))))))))))))))))))))))).
def {|IsBiInverse__cong₂|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))))))))))))))))))))))).
def {|IsBiInverse__inverseˡ|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b {|ℓ₂|}))) (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))))))))))))))))))))))).
def {|IsBiInverse__cong₃|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))))))))))))))))))))))).
def {|IsBiInverse__inverseʳ|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.proj_prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) (r => (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))))))))))))))))))))))).
{|IsBiInverse'constructor|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.sortOmega) (b => Agda.qLevel ({|ℓ₁|} => Agda.sortOmega) ({|ℓ₁|} => Agda.qLevel ({|ℓ₂|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) ({|ℓ₂|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max (univ.s {|ℓ₁|}) (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max (univ.s b) (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) ({|_≈₁_|} => (Agda.prod (Agda.set (univ.s b)) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} (univ.s {|ℓ₂|})))))) (Agda.code (Agda.set b)) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) ({|_≈₂_|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set b) A (_0 => B)) (f => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₁|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set a) B (_0 => A)) ({|g₂|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) ({|f-isCongruent|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))) ({|cong₂|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b {|ℓ₂|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))) ({|inverseˡ|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) ({|cong₃|} => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a {|ℓ₁|}))) (Agda.set (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))))) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|inverseʳ|} => (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))))))))))))))))))))))))))))))).
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, y] Agda.etaExpand _ (IsBiInverse a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|}) y --> {|IsBiInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) ({|IsBiInverse__f-isCongruent|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))) ({|IsBiInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))) ({|IsBiInverse__inverseˡ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) ({|IsBiInverse__cong₃|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)) (Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) ({|IsBiInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))) y)).
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|inverseˡ|}, {|cong₃|}, {|inverseʳ|}] {|IsBiInverse__f-isCongruent|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|inverseˡ|} {|cong₃|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|})))) (IsCongruent a b {|ℓ₁|} {|ℓ₂|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) B (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0)))) {|f-isCongruent|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|inverseˡ|}, {|cong₃|}, {|inverseʳ|}] {|IsBiInverse__cong₂|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|inverseˡ|} {|cong₃|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0)))) {|cong₂|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|inverseˡ|}, {|cong₃|}, {|inverseʳ|}] {|IsBiInverse__inverseˡ|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|inverseˡ|} {|cong₃|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b {|ℓ₂|})) (Agda.prod (Agda.set b) (Agda.set {|ℓ₂|}) B (x => (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|} (Agda.etaExpand b B (f (Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B x))))) (Agda.etaExpand b B x)))) {|inverseˡ|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|inverseˡ|}, {|cong₃|}, {|inverseʳ|}] {|IsBiInverse__cong₃|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|inverseˡ|} {|cong₃|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max b (univ.max {|ℓ₁|} {|ℓ₂|}))) (Function__Definitions.Congruent b a {|ℓ₂|} {|ℓ₁|} B A (Agda.etaExpand (univ.max univ.0 (univ.max b (univ.s {|ℓ₂|}))) (Relation__Binary__Core.Rel b B {|ℓ₂|}) {|_≈₂_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|}) (_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0)))) {|cong₃|}.
 
[a, b, {|ℓ₁|}, {|ℓ₂|}, A, {|_≈₁_|}, B, {|_≈₂_|}, f, {|g₁|}, {|g₂|}, {|f-isCongruent|}, {|cong₂|}, {|inverseˡ|}, {|cong₃|}, {|inverseʳ|}] {|IsBiInverse__inverseʳ|} a b {|ℓ₁|} {|ℓ₂|} A {|_≈₁_|} B {|_≈₂_|} f {|g₁|} {|g₂|} ({|IsBiInverse'constructor|} a b {|ℓ₁|} {|ℓ₂|} A {_0 => _1 => {|_≈₁_|} (Agda.etaExpand a A _0) (Agda.etaExpand a A _1)} B {_0 => _1 => {|_≈₂_|} (Agda.etaExpand b B _0) (Agda.etaExpand b B _1)} {_0 => Agda.etaExpand b B (f (Agda.etaExpand a A _0))} {_0 => Agda.etaExpand a A ({|g₁|} (Agda.etaExpand b B _0))} {_0 => Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B _0))} {|f-isCongruent|} {|cong₂|} {|inverseˡ|} {|cong₃|} {|inverseʳ|}) --> Agda.etaExpand (univ.max univ.0 (univ.max a {|ℓ₁|})) (Agda.prod (Agda.set a) (Agda.set {|ℓ₁|}) A (x => (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ₁|}))) (Relation__Binary__Core.Rel a A {|ℓ₁|}) {|_≈₁_|} (Agda.etaExpand a A ({|g₂|} (Agda.etaExpand b B (f (Agda.etaExpand a A x))))) (Agda.etaExpand a A x)))) {|inverseʳ|}.
 

