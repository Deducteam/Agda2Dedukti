TYPE__Fin : (_0 : Agda.Term (Agda.set univ.0) Agda__Builtin__Nat.Nat) -> Type.
Fin : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (_0 => (Agda.code (Agda.set univ.0)))).
[x] Agda.Term _ (Fin x) --> TYPE__Fin x.
Fin__zero : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Fin (Agda__Builtin__Nat.Nat__suc n)))).
Fin__suc : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => (Fin (Agda__Builtin__Nat.Nat__suc n)))))).



def {|!toℕ|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (_0 => Agda__Builtin__Nat.Nat)))).
[n] {|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) --> Agda__Builtin__Nat.Nat__zero.
[n, x] {|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n x) --> Agda__Builtin__Nat.Nat__suc ({|!toℕ|} n x).
 
def {|!Fin′|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) (Fin n) (_0 => (Agda.code (Agda.set univ.0)))))).
[n, x] {|!Fin′|} n x --> Fin ({|!toℕ|} n x).
 
def cast : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda__Builtin__Equality.{|!_≡_|} univ.0 Agda__Builtin__Nat.Nat m n) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Fin n))))))))).
[x0, x] cast Agda__Builtin__Nat.Nat__zero Agda__Builtin__Nat.Nat__zero x0 x --> x.
[m, n, x] cast (Agda__Builtin__Nat.Nat__suc m) (Agda__Builtin__Nat.Nat__suc n) x (Fin__zero m) --> Fin__zero n.
[m, n, x0, x] cast (Agda__Builtin__Nat.Nat__suc m) (Agda__Builtin__Nat.Nat__suc n) x0 (Fin__suc m x) --> Fin__suc n (cast (Agda__Builtin__Nat.{|!_-_|} (Agda__Builtin__Nat.Nat__suc m) (Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero)) n (Relation__Binary__PropositionalEquality__Core.cong univ.0 Agda__Builtin__Nat.Nat univ.0 Agda__Builtin__Nat.Nat Data__Nat__Base.pred (Agda__Builtin__Nat.Nat__suc m) (Agda__Builtin__Nat.Nat__suc n) x0) x).
 
def {|!fromℕ|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Fin (Agda__Builtin__Nat.Nat__suc n)))).
[] {|!fromℕ|} Agda__Builtin__Nat.Nat__zero --> Fin__zero Agda__Builtin__Nat.Nat__zero.
[n] {|!fromℕ|} (Agda__Builtin__Nat.Nat__suc n) --> Fin__suc (Agda__Builtin__Nat.Nat__suc n) ({|!fromℕ|} n).
 
def {|!fromℕ<|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Nat__Base.{|!_<_|} m n) (_0 => (Fin n))))))).
[n, x] {|!fromℕ<|} Agda__Builtin__Nat.Nat__zero (Agda__Builtin__Nat.Nat__suc n) x --> Fin__zero n.
[m, n, x] {|!fromℕ<|} (Agda__Builtin__Nat.Nat__suc m) (Agda__Builtin__Nat.Nat__suc n) x --> Fin__suc n ({|!fromℕ<|} m n (Data__Nat__Properties__Core.{|!≤-pred|} (Agda__Builtin__Nat.Nat__suc m) n x)).
 
def {|!fromℕ<″|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Nat__Base.{|!_<″_|} m n) (_0 => (Fin n))))))).
[k] {|!fromℕ<″|} Agda__Builtin__Nat.Nat__zero {Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero) k} (Data__Nat__Base.{|!less-than-or-equal|} {Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero} {Agda__Builtin__Nat.Nat__suc k} k (Agda__Builtin__Equality.{|!_≡___refl|} {univ.0} {Agda__Builtin__Nat.Nat} {Agda__Builtin__Nat.Nat__suc k})) --> Fin__zero k.
[m, k] {|!fromℕ<″|} (Agda__Builtin__Nat.Nat__suc m) {Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc m)) k} (Data__Nat__Base.{|!less-than-or-equal|} {Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc m)} {Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} m k))} k (Agda__Builtin__Equality.{|!_≡___refl|} {univ.0} {Agda__Builtin__Nat.Nat} {Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} m k))})) --> Fin__suc (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} m k)) ({|!fromℕ<″|} m (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} m k)) (Data__Nat__Base.{|!less-than-or-equal|} (Agda__Builtin__Nat.Nat__suc m) (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} m k)) k (Agda__Builtin__Equality.{|!_≡___refl|} univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc m) k)))).
 
def raise : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Fin (Agda__Builtin__Nat.{|!_+_|} n m)))))))).
[m, x] raise m Agda__Builtin__Nat.Nat__zero x --> x.
[m, n, x] raise m (Agda__Builtin__Nat.Nat__suc n) x --> Fin__suc (Agda__Builtin__Nat.{|!_+_|} n m) (raise m n x).
 
def {|!reduce≥|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.{|!_+_|} m n)) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Nat__Base.{|!_≥_|} ({|!toℕ|} (Agda__Builtin__Nat.{|!_+_|} m n) i) m) ({|!i≥m|} => (Fin n))))))))).
[n, i, {|!i≥m|}] {|!reduce≥|} Agda__Builtin__Nat.Nat__zero n i {|!i≥m|} --> i.
[m, n, i, {|!i≥m|}] {|!reduce≥|} (Agda__Builtin__Nat.Nat__suc m) n (Fin__suc {Agda__Builtin__Nat.{|!_+_|} m n} i) (Data__Nat__Base.{|!_≤___s≤s|} m {{|!toℕ|} (Agda__Builtin__Nat.{|!_+_|} m n) i} {|!i≥m|}) --> {|!reduce≥|} m n i {|!i≥m|}.
 
def inject : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!Fin′|} n i) (_0 => (Fin n))))))).
[n, i] inject (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__zero {{|!toℕ|} n i}) --> Fin__zero n.
[n, i, x] inject (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__suc {{|!toℕ|} n i} x) --> Fin__suc n (inject n i x).
 
def {|!inject!|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc n)) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!Fin′|} (Agda__Builtin__Nat.Nat__suc n) i) (_0 => (Fin n))))))).
[n, i] {|!inject!|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} i) (Fin__zero {{|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) i}) --> Fin__zero n.
[n, i, x] {|!inject!|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} i) (Fin__suc {{|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) i} x) --> Fin__suc n ({|!inject!|} n i x).
 
def {|!inject+|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Fin (Agda__Builtin__Nat.{|!_+_|} m n)))))))).
[n0, n] {|!inject+|} (Agda__Builtin__Nat.Nat__suc n) n0 (Fin__zero n) --> Fin__zero (Agda__Builtin__Nat.{|!_+_|} n n0).
[n0, n, x] {|!inject+|} (Agda__Builtin__Nat.Nat__suc n) n0 (Fin__suc n x) --> Fin__suc (Agda__Builtin__Nat.{|!_+_|} n n0) ({|!inject+|} n n0 x).
 
def {|!inject₁|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Fin (Agda__Builtin__Nat.Nat__suc m)))))).
[n] {|!inject₁|} (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) --> Fin__zero (Agda__Builtin__Nat.Nat__suc n).
[n, x] {|!inject₁|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n x) --> Fin__suc (Agda__Builtin__Nat.Nat__suc n) ({|!inject₁|} n x).
 
def {|!inject≤|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Nat__Base.{|!_≤_|} m n) (_0 => (Fin n))))))))).
[n0, n, x] {|!inject≤|} (Agda__Builtin__Nat.Nat__suc n) (Agda__Builtin__Nat.Nat__suc n0) (Fin__zero n) x --> Fin__zero n0.
[n0, n, x0, x] {|!inject≤|} (Agda__Builtin__Nat.Nat__suc n) (Agda__Builtin__Nat.Nat__suc n0) (Fin__suc n x0) x --> Fin__suc n0 ({|!inject≤|} n n0 x0 (Data__Nat__Properties__Core.{|!≤-pred|} n n0 x)).
 
def {|!lower₁|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc n)) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Relation__Binary__PropositionalEquality__Core.{|!_≢_|} univ.0 Agda__Builtin__Nat.Nat n ({|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) i)) (_0 => (Fin n))))))).
[x] {|!lower₁|} Agda__Builtin__Nat.Nat__zero (Fin__zero {Agda__Builtin__Nat.Nat__zero}) x --> Data__Empty.{|!⊥-elim|} univ.0 (Fin Agda__Builtin__Nat.Nat__zero) (x (Agda__Builtin__Equality.{|!_≡___refl|} univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero)).
[n, x] {|!lower₁|} (Agda__Builtin__Nat.Nat__suc n) (Fin__zero {Agda__Builtin__Nat.Nat__suc n}) x --> Fin__zero n.
[n, i, x] {|!lower₁|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} i) x --> Fin__suc n ({|!lower₁|} n i (x0 => x (Relation__Binary__PropositionalEquality__Core.cong univ.0 Agda__Builtin__Nat.Nat univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__suc n ({|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) i) x0))).
 
def strengthen : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => ({|!Fin′|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i)))))).
[n] strengthen (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) --> Fin__zero Agda__Builtin__Nat.Nat__zero.
[n, i] strengthen (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) --> Fin__suc (Agda__Builtin__Nat.Nat__suc ({|!toℕ|} n i)) (strengthen n i).
 
def splitAt : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.{|!_+_|} m n)) (_0 => (Data__Sum__Base.{|!_⊎_|} univ.0 univ.0 (Fin m) (Fin n)))))))).
[n, x] splitAt Agda__Builtin__Nat.Nat__zero n x --> Data__Sum__Base.{|!_⊎___inj₂|} univ.0 univ.0 (Fin Agda__Builtin__Nat.Nat__zero) (Fin n) x.
[m, n] splitAt (Agda__Builtin__Nat.Nat__suc m) n (Fin__zero {Agda__Builtin__Nat.{|!_+_|} m n}) --> Data__Sum__Base.{|!_⊎___inj₁|} univ.0 univ.0 (Fin (Agda__Builtin__Nat.Nat__suc m)) (Fin n) (Fin__zero m).
[m, n, x] splitAt (Agda__Builtin__Nat.Nat__suc m) n (Fin__suc {Agda__Builtin__Nat.{|!_+_|} m n} x) --> Data__Sum__Base.map univ.0 (Fin m) univ.0 (Fin (Agda__Builtin__Nat.Nat__suc m)) univ.0 (Fin n) univ.0 (Fin n) (Fin__suc m) (Function__Base.id univ.0 (Fin n)) (splitAt m n x).
 
def join : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Sum__Base.{|!_⊎_|} univ.0 univ.0 (Fin m) (Fin n)) (_0 => (Fin (Agda__Builtin__Nat.{|!_+_|} m n)))))))).
[m, n, x] join m n x --> Data__Sum__Base.{|![_,_]′|} univ.0 (Fin m) univ.0 (Fin (Agda__Builtin__Nat.{|!_+_|} m n)) univ.0 (Fin n) ({|!inject+|} m n) (raise n m) x.
 
def quotRem : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (k => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.{|!_*_|} n k)) (_0 => (Data__Product.{|!_×_|} univ.0 univ.0 (Fin k) (Fin n)))))))).
def {|!with-234|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (k => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.{|!_*_|} (Agda__Builtin__Nat.Nat__suc n) k)) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Sum__Base.{|!_⊎_|} univ.0 univ.0 (Fin k) (Fin (Agda__Builtin__Nat.{|!_*_|} n k))) (w => (Agda__Builtin__Sigma.{|!Σ|} univ.0 univ.0 (Fin k) (x => Fin (Agda__Builtin__Nat.Nat__suc n))))))))))).
[n, k, x] quotRem (Agda__Builtin__Nat.Nat__suc n) k x --> {|!with-234|} n k x (splitAt k (Agda__Builtin__Nat.{|!_*_|} n k) x).
 
[n, k, i, x] {|!with-234|} n k i (Data__Sum__Base.{|!_⊎___inj₁|} {univ.0} {univ.0} {Fin k} {Fin (Agda__Builtin__Nat.{|!_*_|} n k)} x) --> Agda__Builtin__Sigma.{|!_,_|} univ.0 univ.0 (Fin k) (x0 => Fin (Agda__Builtin__Nat.Nat__suc n)) x (Fin__zero n).
[n, k, i, y] {|!with-234|} n k i (Data__Sum__Base.{|!_⊎___inj₂|} {univ.0} {univ.0} {Fin k} {Fin (Agda__Builtin__Nat.{|!_*_|} n k)} y) --> Data__Product.{|!map₂|} univ.0 univ.0 univ.0 (Fin k) (_0 => Fin n) (x => Fin (Agda__Builtin__Nat.Nat__suc n)) (x => Fin__suc n) (quotRem n k y).
 
def remQuot : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (k => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.{|!_*_|} n k)) (_0 => (Data__Product.{|!_×_|} univ.0 univ.0 (Fin n) (Fin k)))))))).
[n, k, x] remQuot n k x --> Data__Product.swap univ.0 (Fin k) univ.0 (Fin n) (quotRem n k x).
 
def combine : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (k => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin k) (_0 => (Fin (Agda__Builtin__Nat.{|!_*_|} n k)))))))))).
[n, k, x] combine (Agda__Builtin__Nat.Nat__suc n) k (Fin__zero n) x --> {|!inject+|} k (Agda__Builtin__Nat.{|!_*_|} n k) x.
[n, k, x0, x] combine (Agda__Builtin__Nat.Nat__suc n) k (Fin__suc n x0) x --> raise (Agda__Builtin__Nat.{|!_*_|} n k) k (combine n k x0 x).
 
def fold : Agda.Term Agda.sortOmega (Agda.qLevel (t => Agda.set (univ.s t)) (t => Agda.prod (Agda.set (univ.s t)) (Agda.set t) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s t)) Agda__Builtin__Nat.Nat (_0 => (Agda.code (Agda.set t)))) (T => (Agda.prod (Agda.set univ.0) (Agda.set t) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set t) (Agda.set t) (Agda.prod (Agda.set univ.0) (Agda.set t) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set t) (Agda.set t) (T n) (_0 => (T (Agda__Builtin__Nat.Nat__suc n)))))) (_0 => (Agda.prod (Agda.set t) (Agda.set t) (Agda.prod (Agda.set univ.0) (Agda.set t) Agda__Builtin__Nat.Nat (n => (T (Agda__Builtin__Nat.Nat__suc n)))) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set t) (Fin m) (_0 => (T m)))))))))))).
[t, T, x0, x, n] fold t T (Agda__Builtin__Nat.Nat__suc n) x0 x (Fin__zero n) --> x n.
[t, T, x1, x0, n, x] fold t T (Agda__Builtin__Nat.Nat__suc n) x1 x0 (Fin__suc n x) --> x1 n (fold t T n x1 x0 x).
 
def {|!fold′|} : Agda.Term Agda.sortOmega (Agda.prod (Agda.set univ.0) Agda.sortOmega Agda__Builtin__Nat.Nat (n => (Agda.qLevel (t => Agda.set (univ.s t)) (t => Agda.prod (Agda.set (univ.s t)) (Agda.set t) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s t)) (Fin (Agda__Builtin__Nat.Nat__suc n)) (_0 => (Agda.code (Agda.set t)))) (T => (Agda.prod (Agda.set t) (Agda.set t) (Agda.prod (Agda.set univ.0) (Agda.set t) (Fin n) (i => (Agda.prod (Agda.set t) (Agda.set t) (T ({|!inject₁|} n i)) (_0 => (T (Fin__suc n i)))))) (_0 => (Agda.prod (Agda.set t) (Agda.set t) (T (Fin__zero n)) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set t) (Fin (Agda__Builtin__Nat.Nat__suc n)) (i => (T i)))))))))))).
[n, t, T, x0, x] {|!fold′|} n t T x0 x (Fin__zero n) --> x.
[n, t, T, x0, x, i] {|!fold′|} (Agda__Builtin__Nat.Nat__suc n) t T x0 x (Fin__suc {Agda__Builtin__Nat.Nat__suc n} i) --> x0 i ({|!fold′|} n t (x1 => T ({|!inject₁|} (Agda__Builtin__Nat.Nat__suc n) x1)) (x1 => x0 ({|!inject₁|} n x1)) x i).
 
def lift : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (k => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Fin n))) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.{|!_+_|} k m)) (_0 => (Fin (Agda__Builtin__Nat.{|!_+_|} k n)))))))))))).
[m, n, x0, x] lift m n Agda__Builtin__Nat.Nat__zero x0 x --> x0 x.
[m, n, k, x] lift m n (Agda__Builtin__Nat.Nat__suc k) x (Fin__zero {Agda__Builtin__Nat.{|!_+_|} k m}) --> Fin__zero (Agda__Builtin__Nat.{|!_+_|} k n).
[m, n, k, x0, x] lift m n (Agda__Builtin__Nat.Nat__suc k) x0 (Fin__suc {Agda__Builtin__Nat.{|!_+_|} k m} x) --> Fin__suc (Agda__Builtin__Nat.{|!_+_|} k n) (lift m n k x0 x).
 
def {|!_+_|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (j => (Fin (Agda__Builtin__Nat.{|!_+_|} ({|!toℕ|} m i) n)))))))))).
[n0, n, j] {|!_+_|} (Agda__Builtin__Nat.Nat__suc n) n0 (Fin__zero n) j --> j.
[n0, n, i, j] {|!_+_|} (Agda__Builtin__Nat.Nat__suc n) n0 (Fin__suc n i) j --> Fin__suc (Agda__Builtin__Nat.{|!_+_|} ({|!toℕ|} n i) n0) ({|!_+_|} n n0 i j).
 
def {|!_-_|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!Fin′|} (Agda__Builtin__Nat.Nat__suc m) (Fin__suc m i)) (j => (Fin (Agda__Builtin__Nat.{|!_-_|} m ({|!toℕ|} ({|!toℕ|} (Agda__Builtin__Nat.Nat__suc m) (Fin__suc m i)) j))))))))).
[m, i] {|!_-_|} m i (Fin__zero {{|!toℕ|} m i}) --> i.
[n, i, j] {|!_-_|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__suc {Agda__Builtin__Nat.Nat__suc ({|!toℕ|} n i)} j) --> {|!_-_|} n i j.
 
def {|!_ℕ-_|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc n)) (j => (Fin (Agda__Builtin__Nat.{|!_-_|} (Agda__Builtin__Nat.Nat__suc n) ({|!toℕ|} (Agda__Builtin__Nat.Nat__suc n) j))))))).
[n] {|!_ℕ-_|} n (Fin__zero n) --> {|!fromℕ|} n.
[n, j] {|!_ℕ-_|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} j) --> {|!_ℕ-_|} n j.
 
def {|!_ℕ-ℕ_|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc n)) (_0 => Agda__Builtin__Nat.Nat)))).
[n] {|!_ℕ-ℕ_|} n (Fin__zero n) --> n.
[n, x] {|!_ℕ-ℕ_|} (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} x) --> {|!_ℕ-ℕ_|} n x.
 
def pred : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (_0 => (Fin n))))).
[n] pred (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) --> Fin__zero n.
[n, x] pred (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n x) --> {|!inject₁|} n x.
 
def opposite : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (_0 => (Fin n))))).
[n] opposite (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) --> {|!fromℕ|} n.
[n, x] opposite (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n x) --> {|!inject₁|} n (opposite n x).
 
def punchOut : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc m)) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc m)) (j => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Relation__Binary__PropositionalEquality__Core.{|!_≢_|} univ.0 (Fin (Agda__Builtin__Nat.Nat__suc m)) i j) (_0 => (Fin m))))))))).
[m, x] punchOut m (Fin__zero m) (Fin__zero m) x --> Data__Empty.{|!⊥-elim|} univ.0 (Fin m) (x (Agda__Builtin__Equality.{|!_≡___refl|} univ.0 (Fin (Agda__Builtin__Nat.Nat__suc m)) (Fin__zero m))).
[m, j, x] punchOut m (Fin__zero m) (Fin__suc m j) x --> j.
[m, i, x] punchOut (Agda__Builtin__Nat.Nat__suc m) (Fin__suc {Agda__Builtin__Nat.Nat__suc m} i) (Fin__zero {Agda__Builtin__Nat.Nat__suc m}) x --> Fin__zero m.
[m, i, j, x] punchOut (Agda__Builtin__Nat.Nat__suc m) (Fin__suc {Agda__Builtin__Nat.Nat__suc m} i) (Fin__suc {Agda__Builtin__Nat.Nat__suc m} j) x --> Fin__suc m (punchOut m i j (x0 => x (Relation__Binary__PropositionalEquality__Core.cong univ.0 (Fin (Agda__Builtin__Nat.Nat__suc m)) univ.0 (Fin (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc m))) (Fin__suc (Agda__Builtin__Nat.Nat__suc m)) i j x0))).
 
def punchIn : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc m)) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin m) (_0 => (Fin (Agda__Builtin__Nat.Nat__suc m)))))))).
[m, x] punchIn m (Fin__zero m) x --> Fin__suc m x.
[n, x] punchIn (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} x) (Fin__zero n) --> Fin__zero (Agda__Builtin__Nat.Nat__suc n).
[n, x0, x] punchIn (Agda__Builtin__Nat.Nat__suc n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} x0) (Fin__suc n x) --> Fin__suc (Agda__Builtin__Nat.Nat__suc n) (punchIn n x0 x).
 
def pinch : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin (Agda__Builtin__Nat.Nat__suc n)) (_0 => (Fin n))))))).
[n, x] pinch (Agda__Builtin__Nat.Nat__suc n) x (Fin__zero {Agda__Builtin__Nat.Nat__suc n}) --> Fin__zero n.
[n, x] pinch (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} x) --> x.
[n, x0, x] pinch (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n x0) (Fin__suc {Agda__Builtin__Nat.Nat__suc n} x) --> Fin__suc n (pinch n x0 x).
 
def {|!_≤_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (n => (Relation__Binary__Core.Rel univ.0 (Fin n) Level.{|!0ℓ|}))).
[n, x0, x] {|!_≤_|} n x0 x --> Function__Base._on_ univ.0 Agda__Builtin__Nat.Nat (univ.s univ.0) (Agda.code (Agda.set Level.{|!0ℓ|})) univ.0 (Fin n) Data__Nat__Base.{|!_≤_|} ({|!toℕ|} n) x0 x.
 
def {|!_≥_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (n => (Relation__Binary__Core.Rel univ.0 (Fin n) Level.{|!0ℓ|}))).
[n, x0, x] {|!_≥_|} n x0 x --> Function__Base._on_ univ.0 Agda__Builtin__Nat.Nat (univ.s univ.0) (Agda.code (Agda.set Level.{|!0ℓ|})) univ.0 (Fin n) Data__Nat__Base.{|!_≥_|} ({|!toℕ|} n) x0 x.
 
def {|!_<_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (n => (Relation__Binary__Core.Rel univ.0 (Fin n) Level.{|!0ℓ|}))).
[n, x0, x] {|!_<_|} n x0 x --> Function__Base._on_ univ.0 Agda__Builtin__Nat.Nat (univ.s univ.0) (Agda.code (Agda.set Level.{|!0ℓ|})) univ.0 (Fin n) Data__Nat__Base.{|!_<_|} ({|!toℕ|} n) x0 x.
 
def {|!_>_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (n => (Relation__Binary__Core.Rel univ.0 (Fin n) Level.{|!0ℓ|}))).
[n, x0, x] {|!_>_|} n x0 x --> Function__Base._on_ univ.0 Agda__Builtin__Nat.Nat (univ.s univ.0) (Agda.code (Agda.set Level.{|!0ℓ|})) univ.0 (Fin n) Data__Nat__Base.{|!_>_|} ({|!toℕ|} n) x0 x.
 
{|!TYPE___≺_|} : (_0 : Agda.Term (Agda.set univ.0) Agda__Builtin__Nat.Nat) -> (_0 : Agda.Term (Agda.set univ.0) Agda__Builtin__Nat.Nat) -> Type.
{|!_≺_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (_0 => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (_0 => (Agda.code (Agda.set univ.0)))))).
[x0, x] Agda.Term _ ({|!_≺_|} x0 x) --> {|!TYPE___≺_|} x0 x.
{|!_≺____≻toℕ_|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => ({|!_≺_|} ({|!toℕ|} n i) n))))).


TYPE__Ordering : (n : Agda.Term (Agda.set univ.0) Agda__Builtin__Nat.Nat) -> (_0 : Agda.Term (Agda.set univ.0) (Fin n)) -> (_0 : Agda.Term (Agda.set univ.0) (Fin n)) -> Type.
Ordering : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) (Fin n) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) (Fin n) (_0 => (Agda.code (Agda.set univ.0)))))))).
[n, x0, x] Agda.Term _ (Ordering n x0 x) --> TYPE__Ordering n x0 x.
Ordering__less : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (greatest => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!Fin′|} n greatest) (least => (Ordering n (inject n greatest least) greatest))))))).
Ordering__equal : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => (Ordering n i i))))).
Ordering__greater : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (greatest => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!Fin′|} n greatest) (least => (Ordering n greatest (inject n greatest least)))))))).




def compare : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (j => (Ordering n i j))))))).
def {|!with-540|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (i => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Fin n) (j => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Ordering n i j) (w => (Ordering (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__suc n j)))))))))).
[n] compare (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) (Fin__zero n) --> Ordering__equal (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n).
[n, j] compare (Agda__Builtin__Nat.Nat__suc n) (Fin__zero n) (Fin__suc n j) --> Ordering__less (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n j) (Fin__zero ({|!toℕ|} n j)).
[n, i] compare (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__zero n) --> Ordering__greater (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__zero ({|!toℕ|} n i)).
[n, i, j] compare (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__suc n j) --> {|!with-540|} n i j (compare n i j).
 
[n, j, least] {|!with-540|} n {inject n j least} j (Ordering__less n j least) --> Ordering__less (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n j) (Fin__suc ({|!toℕ|} n j) least).
[n, i] {|!with-540|} n i i (Ordering__equal n i) --> Ordering__equal (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i).
[n, i, least] {|!with-540|} n i {inject n i least} (Ordering__greater n i least) --> Ordering__greater (Agda__Builtin__Nat.Nat__suc n) (Fin__suc n i) (Fin__suc ({|!toℕ|} n i) least).
 
def {|!fromℕ≤|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Nat__Base.{|!_<_|} m n) (_0 => (Fin n))))))).

def {|!fromℕ≤″|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Data__Nat__Base.{|!_<″_|} m n) (_0 => (Fin n))))))).

