def boolToMaybe : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Bool.Bool (_0 => (Agda__Builtin__Maybe.Maybe univ.0 Agda__Builtin__Unit.{|⊤|}))).
[] boolToMaybe Agda__Builtin__Bool.Bool__false --> Agda.etaExpand univ.0 (Agda__Builtin__Maybe.Maybe univ.0 Agda__Builtin__Unit.{|⊤|}) (Agda__Builtin__Maybe.Maybe__nothing univ.0 Agda__Builtin__Unit.{|⊤|}).
[] boolToMaybe Agda__Builtin__Bool.Bool__true --> Agda.etaExpand univ.0 (Agda__Builtin__Maybe.Maybe univ.0 Agda__Builtin__Unit.{|⊤|}) (Agda__Builtin__Maybe.Maybe__just univ.0 Agda__Builtin__Unit.{|⊤|} (Agda.etaExpand univ.0 Agda__Builtin__Unit.{|⊤|} Agda__Builtin__Unit.tt)).
 
def {|is-just|} : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.set (univ.s {|A'a|})) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) (Agda.set {|A'a|}) (Agda.code (Agda.set {|A'a|})) (A => (Agda.prod (Agda.set {|A'a|}) (Agda.set univ.0) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => Agda__Builtin__Bool.Bool))))).
[{|A'a|}, A, x] {|is-just|} {|A'a|} A (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x) --> Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool Agda__Builtin__Bool.Bool__true.
[{|A'a|}, A] {|is-just|} {|A'a|} A (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A) --> Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool Agda__Builtin__Bool.Bool__false.
 
def {|is-nothing|} : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.set (univ.s {|A'a|})) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) (Agda.set {|A'a|}) (Agda.code (Agda.set {|A'a|})) (A => (Agda.prod (Agda.set {|A'a|}) (Agda.set univ.0) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => Agda__Builtin__Bool.Bool))))).
[{|A'a|}, A, x] {|is-nothing|} {|A'a|} A x --> Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool (Data__Bool__Base.not (Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool ({|is-just|} {|A'a|} A (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x)))).
 
def decToMaybe : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.set (univ.s {|A'a|})) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) (Agda.set {|A'a|}) (Agda.code (Agda.set {|A'a|})) (A => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|A'a|}) (Relation__Nullary.Dec {|A'a|} A) (_0 => (Agda__Builtin__Maybe.Maybe {|A'a|} A)))))).
[{|A'a|}, A, proof] decToMaybe {|A'a|} A (Relation__Nullary._because_ {|A'a|} A Agda__Builtin__Bool.Bool__false proof) --> Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A).
[{|A'a|}, A, proof] decToMaybe {|A'a|} A (Relation__Nullary._because_ {|A'a|} A Agda__Builtin__Bool.Bool__true proof) --> Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) (Agda__Builtin__Maybe.Maybe__just {|A'a|} A (Agda.etaExpand {|A'a|} A (Relation__Nullary__Reflects.invert {|A'a|} A (Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool Agda__Builtin__Bool.Bool__true) (Agda.etaExpand {|A'a|} (Relation__Nullary.Reflects {|A'a|} A (Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool Agda__Builtin__Bool.Bool__true)) proof)))).
 
def maybe : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel (b => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s b)))) (b => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.s b)))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s b)))) (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set (univ.s b)) (Agda__Builtin__Maybe.Maybe a A) (_0 => (Agda.code (Agda.set b)))) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.set (univ.max univ.0 (univ.max a b))) (Agda.prod (Agda.set a) (Agda.set b) A (x => (B (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) (Agda__Builtin__Maybe.Maybe__just a A (Agda.etaExpand a A x)))))) (_0 => (Agda.prod (Agda.set b) (Agda.set (univ.max univ.0 (univ.max a b))) (B (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) (Agda__Builtin__Maybe.Maybe__nothing a A))) (_0 => (Agda.prod (Agda.set a) (Agda.set b) (Agda__Builtin__Maybe.Maybe a A) (x => (B (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) x)))))))))))))).
[a, b, A, B, x1, x0, x] maybe a b A B x1 x0 (Agda__Builtin__Maybe.Maybe__just a A x) --> Agda.etaExpand b (B (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) (Agda__Builtin__Maybe.Maybe__just a A (Agda.etaExpand a A x)))) (x1 (Agda.etaExpand a A x)).
[a, b, A, B, x0, x] maybe a b A B x0 x (Agda__Builtin__Maybe.Maybe__nothing a A) --> Agda.etaExpand b (B (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) (Agda__Builtin__Maybe.Maybe__nothing a A))) x.
 
def {|maybe′|} : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) A (_0 => B)) (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) B (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => B)))))))))))).
[{|A'a|}, A, {|B'b|}, B, x1, x0, x] {|maybe′|} {|A'a|} A {|B'b|} B x1 x0 x --> Agda.etaExpand {|B'b|} B (maybe {|A'a|} {|B'b|} A (_0 => B) (x2 => Agda.etaExpand {|B'b|} B (x1 (Agda.etaExpand {|A'a|} A x2))) (Agda.etaExpand {|B'b|} B x0) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x)).
 
def fromMaybe : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.set (univ.s {|A'a|})) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) (Agda.set {|A'a|}) (Agda.code (Agda.set {|A'a|})) (A => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|A'a|}) A (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|A'a|}) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => A))))))).
[{|A'a|}, A, x0, x] fromMaybe {|A'a|} A x0 x --> Agda.etaExpand {|A'a|} A ({|maybe′|} {|A'a|} A {|A'a|} A (_0 => Agda.etaExpand {|A'a|} A (Function__Base.id {|A'a|} A (Agda.etaExpand {|A'a|} A _0))) (Agda.etaExpand {|A'a|} A x0) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x)).
 
def {|DEFAULT__From-just|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.set (univ.s a)) (a => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.s a)) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set a) (Agda.set (univ.s a)) (Agda__Builtin__Maybe.Maybe a A) (_0 => (Agda.code (Agda.set a))))))).
[a, A, x] {|DEFAULT__From-just|} a A (Agda__Builtin__Maybe.Maybe__just a A x) --> A.
[a, A] {|DEFAULT__From-just|} a A (Agda__Builtin__Maybe.Maybe__nothing a A) --> Level.Lift univ.0 a Agda__Builtin__Unit.{|⊤|}.
 
def {|DEFAULT__from-just|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.set (univ.s a)) (a => Agda.prod (Agda.set (univ.s a)) (Agda.set a) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set a) (Agda.set a) (Agda__Builtin__Maybe.Maybe a A) (x => ({|DEFAULT__From-just|} a A (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) x))))))).
[a, A, x] {|DEFAULT__from-just|} a A (Agda__Builtin__Maybe.Maybe__just a A x) --> Agda.etaExpand a ({|DEFAULT__From-just|} a A (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) (Agda__Builtin__Maybe.Maybe__just a A (Agda.etaExpand a A x)))) x.
[a, A] {|DEFAULT__from-just|} a A (Agda__Builtin__Maybe.Maybe__nothing a A) --> Agda.etaExpand a ({|DEFAULT__From-just|} a A (Agda.etaExpand a (Agda__Builtin__Maybe.Maybe a A) (Agda__Builtin__Maybe.Maybe__nothing a A))) (Level.lift univ.0 a Agda__Builtin__Unit.{|⊤|} (Agda.etaExpand univ.0 Agda__Builtin__Unit.{|⊤|} Agda__Builtin__Unit.tt)).
 
def map : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) A (_0 => B)) (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda__Builtin__Maybe.Maybe {|B'b|} B))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] map {|A'a|} A {|B'b|} B x0 x --> Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (maybe {|A'a|} {|B'b|} A (_0 => Agda__Builtin__Maybe.Maybe {|B'b|} B) (x1 => Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (Agda__Builtin__Maybe.Maybe__just {|B'b|} B (Agda.etaExpand {|B'b|} B (x0 (Agda.etaExpand {|A'a|} A x1))))) (Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (Agda__Builtin__Maybe.Maybe__nothing {|B'b|} B)) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x)).
 
def ap : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) A (_0 => B))) (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda__Builtin__Maybe.Maybe {|B'b|} B))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] ap {|A'a|} A {|B'b|} B (Agda__Builtin__Maybe.Maybe__just {(univ.max univ.0 (univ.max {|A'a|} {|B'b|}))} {Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) A (_0 => B)} x0) x --> Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (map {|A'a|} A {|B'b|} B (_0 => Agda.etaExpand {|B'b|} B (x0 (Agda.etaExpand {|A'a|} A _0))) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x)).
[{|A'a|}, A, {|B'b|}, B, x] ap {|A'a|} A {|B'b|} B (Agda__Builtin__Maybe.Maybe__nothing {(univ.max univ.0 (univ.max {|A'a|} {|B'b|}))} {Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) A (_0 => B)}) x --> Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (Function__Base.const {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) (Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (Agda__Builtin__Maybe.Maybe__nothing {|B'b|} B)) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x)).
 
def {|_>>=_|} : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.set {|B'b|}) (Agda.prod (Agda.set {|A'a|}) (Agda.set {|B'b|}) A (_0 => (Agda__Builtin__Maybe.Maybe {|B'b|} B))) (_0 => (Agda__Builtin__Maybe.Maybe {|B'b|} B))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] {|_>>=_|} {|A'a|} A {|B'b|} B (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x0) x --> Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (x (Agda.etaExpand {|A'a|} A x0)).
[{|A'a|}, A, {|B'b|}, B, x] {|_>>=_|} {|A'a|} A {|B'b|} B (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A) x --> Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) (Agda__Builtin__Maybe.Maybe__nothing {|B'b|} B).
 
def {|_<∣>_|} : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.set (univ.s {|A'a|})) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) (Agda.set {|A'a|}) (Agda.code (Agda.set {|A'a|})) (A => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|A'a|}) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|A'a|}) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda__Builtin__Maybe.Maybe {|A'a|} A)))))))).
[{|A'a|}, A, x0, x] {|_<∣>_|} {|A'a|} A (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x0) x --> Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) (Agda__Builtin__Maybe.Maybe__just {|A'a|} A (Agda.etaExpand {|A'a|} A x0)).
[{|A'a|}, A, x] {|_<∣>_|} {|A'a|} A (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A) x --> Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x.
 
def when : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.set (univ.s {|A'a|})) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) (Agda.set {|A'a|}) (Agda.code (Agda.set {|A'a|})) (A => (Agda.prod (Agda.set univ.0) (Agda.set {|A'a|}) Agda__Builtin__Bool.Bool (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set {|A'a|}) A (_0 => (Agda__Builtin__Maybe.Maybe {|A'a|} A)))))))).
[{|A'a|}, A, x0, x] when {|A'a|} A x0 x --> Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) (map univ.0 Agda__Builtin__Unit.{|⊤|} {|A'a|} A (_0 => Agda.etaExpand {|A'a|} A (Function__Base.const {|A'a|} A univ.0 Agda__Builtin__Unit.{|⊤|} (Agda.etaExpand {|A'a|} A x) (Agda.etaExpand univ.0 Agda__Builtin__Unit.{|⊤|} _0))) (Agda.etaExpand univ.0 (Agda__Builtin__Maybe.Maybe univ.0 Agda__Builtin__Unit.{|⊤|}) (boolToMaybe (Agda.etaExpand univ.0 Agda__Builtin__Bool.Bool x0)))).
 
def alignWith : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.sortOmega) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) Agda.sortOmega (Agda.code (Agda.set {|B'b|})) (B => (Agda.qLevel ({|C'c|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} (univ.s {|C'c|}))))) ({|C'c|} => Agda.prod (Agda.set (univ.s {|C'c|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} {|C'c|})))) (Agda.code (Agda.set {|C'c|})) (C => (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} {|C'c|})))) (Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} {|C'c|})))) (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.set {|C'c|}) (Data__These__Base.These {|A'a|} {|B'b|} A B) (_0 => C)) (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|B'b|} {|C'c|}))) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set {|C'c|}) (Agda__Builtin__Maybe.Maybe {|B'b|} B) (_0 => (Agda__Builtin__Maybe.Maybe {|C'c|} C)))))))))))))))).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x1, x0, x] alignWith {|A'a|} A {|B'b|} B {|C'c|} C x1 (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x0) (Agda__Builtin__Maybe.Maybe__just {|B'b|} B x) --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__just {|C'c|} C (Agda.etaExpand {|C'c|} C (x1 (Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__these {|A'a|} {|B'b|} A B (Agda.etaExpand {|A'a|} A x0) (Agda.etaExpand {|B'b|} B x)))))).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x0, x] alignWith {|A'a|} A {|B'b|} B {|C'c|} C x0 (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x) (Agda__Builtin__Maybe.Maybe__nothing {|B'b|} B) --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__just {|C'c|} C (Agda.etaExpand {|C'c|} C (x0 (Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__this {|A'a|} {|B'b|} A B (Agda.etaExpand {|A'a|} A x)))))).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x0, x] alignWith {|A'a|} A {|B'b|} B {|C'c|} C x0 (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A) (Agda__Builtin__Maybe.Maybe__just {|B'b|} B x) --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__just {|C'c|} C (Agda.etaExpand {|C'c|} C (x0 (Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__that {|A'a|} {|B'b|} A B (Agda.etaExpand {|B'b|} B x)))))).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x] alignWith {|A'a|} A {|B'b|} B {|C'c|} C x (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A) (Agda__Builtin__Maybe.Maybe__nothing {|B'b|} B) --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__nothing {|C'c|} C).
 
def zipWith : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.sortOmega) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) Agda.sortOmega (Agda.code (Agda.set {|B'b|})) (B => (Agda.qLevel ({|C'c|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} (univ.s {|C'c|}))))) ({|C'c|} => Agda.prod (Agda.set (univ.s {|C'c|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} {|C'c|})))) (Agda.code (Agda.set {|C'c|})) (C => (Agda.prod (Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} {|C'c|})))) (Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.max {|B'b|} {|C'c|})))) (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|B'b|} {|C'c|}))) A (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set {|C'c|}) B (_0 => C)))) (_0 => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|B'b|} {|C'c|}))) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set {|C'c|}) (Agda__Builtin__Maybe.Maybe {|B'b|} B) (_0 => (Agda__Builtin__Maybe.Maybe {|C'c|} C)))))))))))))))).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x1, x0, x] zipWith {|A'a|} A {|B'b|} B {|C'c|} C x1 (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x0) (Agda__Builtin__Maybe.Maybe__just {|B'b|} B x) --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__just {|C'c|} C (Agda.etaExpand {|C'c|} C (x1 (Agda.etaExpand {|A'a|} A x0) (Agda.etaExpand {|B'b|} B x)))).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x0, x] zipWith {|A'a|} A {|B'b|} B {|C'c|} C x0 (Agda__Builtin__Maybe.Maybe__just {|A'a|} A x) (Agda__Builtin__Maybe.Maybe__nothing {|B'b|} B) --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__nothing {|C'c|} C).
[{|A'a|}, A, {|B'b|}, B, {|C'c|}, C, x0, x] zipWith {|A'a|} A {|B'b|} B {|C'c|} C x0 (Agda__Builtin__Maybe.Maybe__nothing {|A'a|} A) x --> Agda.etaExpand {|C'c|} (Agda__Builtin__Maybe.Maybe {|C'c|} C) (Agda__Builtin__Maybe.Maybe__nothing {|C'c|} C).
 
def align : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|B'b|} B) (_0 => (Agda__Builtin__Maybe.Maybe (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B)))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] align {|A'a|} A {|B'b|} B x0 x --> Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Agda__Builtin__Maybe.Maybe (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B)) (alignWith {|A'a|} A {|B'b|} B (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (_0 => Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Function__Base.id (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) _0))) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x0) (Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) x)).
 
def zip : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|B'b|} B) (_0 => (Agda__Builtin__Maybe.Maybe (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__Product.{|_×_|} {|A'a|} {|B'b|} A B)))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] zip {|A'a|} A {|B'b|} B x0 x --> Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Agda__Builtin__Maybe.Maybe (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__Product.{|_×_|} {|A'a|} {|B'b|} A B)) (zipWith {|A'a|} A {|B'b|} B (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__Product.{|_×_|} {|A'a|} {|B'b|} A B) (_0 => _1 => Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__Product.{|_×_|} {|A'a|} {|B'b|} A B) (Agda__Builtin__Sigma.{|_,_|} {|A'a|} {|B'b|} A (x1 => B) (Agda.etaExpand {|A'a|} A _0) (Agda.etaExpand {|B'b|} B _1))) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x0) (Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) x)).
 
def thisM : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) A (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|B'b|} B) (_0 => (Data__These__Base.These {|A'a|} {|B'b|} A B))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] thisM {|A'a|} A {|B'b|} B x0 x --> Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) ({|maybe′|} {|B'b|} B (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (_0 => Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__these {|A'a|} {|B'b|} A B (Agda.etaExpand {|A'a|} A x0) (Agda.etaExpand {|B'b|} B _0))) (Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__this {|A'a|} {|B'b|} A B (Agda.etaExpand {|A'a|} A x0))) (Agda.etaExpand {|B'b|} (Agda__Builtin__Maybe.Maybe {|B'b|} B) x)).
 
def thatM : Agda.Term Agda.sortOmega (Agda.qLevel ({|A'a|} => Agda.sortOmega) ({|A'a|} => Agda.prod (Agda.set (univ.s {|A'a|})) Agda.sortOmega (Agda.code (Agda.set {|A'a|})) (A => (Agda.qLevel ({|B'b|} => Agda.set (univ.max univ.0 (univ.max {|A'a|} (univ.s {|B'b|})))) ({|B'b|} => Agda.prod (Agda.set (univ.s {|B'b|})) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda.code (Agda.set {|B'b|})) (B => (Agda.prod (Agda.set {|A'a|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) (Agda__Builtin__Maybe.Maybe {|A'a|} A) (_0 => (Agda.prod (Agda.set {|B'b|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) B (_0 => (Data__These__Base.These {|A'a|} {|B'b|} A B))))))))))).
[{|A'a|}, A, {|B'b|}, B, x0, x] thatM {|A'a|} A {|B'b|} B x0 x --> Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) ({|maybe′|} {|A'a|} A (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Agda.prod (Agda.set {|B'b|}) (Agda.set (univ.max univ.0 (univ.max {|A'a|} {|B'b|}))) B (_0 => (Data__These__Base.These {|A'a|} {|B'b|} A B))) (_0 => _1 => Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__these {|A'a|} {|B'b|} A B (Agda.etaExpand {|A'a|} A _0) (Agda.etaExpand {|B'b|} B _1))) (_0 => Agda.etaExpand (univ.max univ.0 (univ.max {|A'a|} {|B'b|})) (Data__These__Base.These {|A'a|} {|B'b|} A B) (Data__These__Base.These__that {|A'a|} {|B'b|} A B (Agda.etaExpand {|B'b|} B _0))) (Agda.etaExpand {|A'a|} (Agda__Builtin__Maybe.Maybe {|A'a|} A) x0) (Agda.etaExpand {|B'b|} B x)).
 
