def {|Congruent₁|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₁|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] {|Congruent₁|} a {|ℓ|} A {|_≈_|} x --> Relation__Binary__Core.{|_Preserves_⟶_|} a A a A {|ℓ|} {|ℓ|} (_0 => Agda.etaExpand a A (x (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}).
 
def {|Congruent₂|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] {|Congruent₂|} a {|ℓ|} A {|_≈_|} x --> Relation__Binary__Core.{|_Preserves₂_⟶_⟶_|} a A a A a A {|ℓ|} {|ℓ|} {|ℓ|} (_0 => _1 => Agda.etaExpand a A (x (Agda.etaExpand a A _0) (Agda.etaExpand a A _1))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}).
 
def LeftCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] LeftCongruent a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Relation__Binary__Core.{|_Preserves_⟶_|} a A a A {|ℓ|} {|ℓ|} (_0 => Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A _0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}))).
 
def RightCongruent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] RightCongruent a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Relation__Binary__Core.{|_Preserves_⟶_|} a A a A {|ℓ|} {|ℓ|} (section => Agda.etaExpand a A (x (Agda.etaExpand a A section) (Agda.etaExpand a A x0))) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}))).
 
def Associative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] Associative a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A y))) (Agda.etaExpand a A {|z|}))) (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))))))))).
 
def Commutative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] Commutative a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (y => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A y))) (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A x0))))))).
 
def LeftIdentity : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] LeftIdentity a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x1 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A x1))) (Agda.etaExpand a A x1))).
 
def RightIdentity : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] RightIdentity a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x1 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A x0))) (Agda.etaExpand a A x1))).
 
def Identity : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] Identity a {|ℓ|} A {|_≈_|} x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (LeftIdentity a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (RightIdentity a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def LeftZero : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] LeftZero a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x1 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A x1))) (Agda.etaExpand a A x0))).
 
def RightZero : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] RightZero a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x1 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A x0))) (Agda.etaExpand a A x0))).
 
def Zero : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] Zero a {|ℓ|} A {|_≈_|} x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (LeftZero a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (RightZero a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def LeftInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₁|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x1, x0, x] LeftInverse a {|ℓ|} A {|_≈_|} x1 x0 x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x2 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A (x0 (Agda.etaExpand a A x2))) (Agda.etaExpand a A x2))) (Agda.etaExpand a A x1))).
 
def RightInverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₁|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x1, x0, x] RightInverse a {|ℓ|} A {|_≈_|} x1 x0 x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x2 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x2) (Agda.etaExpand a A (x0 (Agda.etaExpand a A x2))))) (Agda.etaExpand a A x1))).
 
def Inverse : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₁|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x1, x0, x] Inverse a {|ℓ|} A {|_≈_|} x1 x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (LeftInverse a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x1) (Agda.etaExpand a (Algebra__Core.{|Op₁|} a A) x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (RightInverse a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x1) (Agda.etaExpand a (Algebra__Core.{|Op₁|} a A) x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def LeftConical : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] LeftConical a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (y => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A y))) (Agda.etaExpand a A x0)) (_0 => ({|_≈_|} (Agda.etaExpand a A x1) (Agda.etaExpand a A x0))))))).
 
def RightConical : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] RightConical a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (y => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A y))) (Agda.etaExpand a A x0)) (_0 => ({|_≈_|} (Agda.etaExpand a A y) (Agda.etaExpand a A x0))))))).
 
def Conical : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] Conical a {|ℓ|} A {|_≈_|} x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (LeftConical a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (RightConical a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def {|_DistributesOverˡ_|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] {|_DistributesOverˡ_|} a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => ({|_≈_|} (Agda.etaExpand a A (x0 (Agda.etaExpand a A x1) (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))) (Agda.etaExpand a A (x (Agda.etaExpand a A (x0 (Agda.etaExpand a A x1) (Agda.etaExpand a A y))) (Agda.etaExpand a A (x0 (Agda.etaExpand a A x1) (Agda.etaExpand a A {|z|}))))))))))).
 
def {|_DistributesOverʳ_|} : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] {|_DistributesOverʳ_|} a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => ({|_≈_|} (Agda.etaExpand a A (x0 (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))) (Agda.etaExpand a A x1))) (Agda.etaExpand a A (x (Agda.etaExpand a A (x0 (Agda.etaExpand a A y) (Agda.etaExpand a A x1))) (Agda.etaExpand a A (x0 (Agda.etaExpand a A {|z|}) (Agda.etaExpand a A x1))))))))))).
 
def _DistributesOver_ : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] _DistributesOver_ a {|ℓ|} A {|_≈_|} x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) ({|_DistributesOverˡ_|} a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) ({|_DistributesOverʳ_|} a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def _IdempotentOn_ : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.s {|ℓ|})) A (_0 => (Agda.code (Agda.set {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] _IdempotentOn_ a {|ℓ|} A {|_≈_|} x0 x --> {|_≈_|} (Agda.etaExpand a A (x0 (Agda.etaExpand a A x) (Agda.etaExpand a A x))) (Agda.etaExpand a A x).
 
def Idempotent : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] Idempotent a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x0 => (_IdempotentOn_ a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x) (Agda.etaExpand a A x0))).
 
def IdempotentFun : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₁|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] IdempotentFun a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x0 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A (x (Agda.etaExpand a A x0))))) (Agda.etaExpand a A (x (Agda.etaExpand a A x0))))).
 
def Selective : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] Selective a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (y => (Data__Sum__Base.{|_⊎_|} {|ℓ|} {|ℓ|} ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A y))) (Agda.etaExpand a A x0)) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A y))) (Agda.etaExpand a A y)))))).
 
def _Absorbs_ : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] _Absorbs_ a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (y => ({|_≈_|} (Agda.etaExpand a A (x0 (Agda.etaExpand a A x1) (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A y))))) (Agda.etaExpand a A x1))))).
 
def Absorptive : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] Absorptive a {|ℓ|} A {|_≈_|} x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (_Absorbs_ a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (_Absorbs_ a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x0)).
 
def Involutive : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₁|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] Involutive a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A (x0 => ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A (x (Agda.etaExpand a A x0))))) (Agda.etaExpand a A x0))).
 
def LeftCancellative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] LeftCancellative a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A y))) (Agda.etaExpand a A (x (Agda.etaExpand a A x0) (Agda.etaExpand a A {|z|})))) (_0 => ({|_≈_|} (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))))))).
 
def RightCancellative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] RightCancellative a {|ℓ|} A {|_≈_|} x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A x0))) (Agda.etaExpand a A (x (Agda.etaExpand a A {|z|}) (Agda.etaExpand a A x0)))) (_0 => ({|_≈_|} (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))))))).
 
def Cancellative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x] Cancellative a {|ℓ|} A {|_≈_|} x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (LeftCancellative a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (RightCancellative a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def AlmostLeftCancellative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] AlmostLeftCancellative a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) (Relation__Nullary.{|¬_|} {|ℓ|} ({|_≈_|} (Agda.etaExpand a A x1) (Agda.etaExpand a A x0))) (_0 => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A y))) (Agda.etaExpand a A (x (Agda.etaExpand a A x1) (Agda.etaExpand a A {|z|})))) (_0 => ({|_≈_|} (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))))))))).
 
def AlmostRightCancellative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] AlmostRightCancellative a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) (Relation__Nullary.{|¬_|} {|ℓ|} ({|_≈_|} (Agda.etaExpand a A x1) (Agda.etaExpand a A x0))) (_0 => (Agda.prod (Agda.set {|ℓ|}) (Agda.set {|ℓ|}) ({|_≈_|} (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A x1))) (Agda.etaExpand a A (x (Agda.etaExpand a A {|z|}) (Agda.etaExpand a A x1)))) (_0 => ({|_≈_|} (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))))))))).
 
def AlmostCancellative : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) A (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] AlmostCancellative a {|ℓ|} A {|_≈_|} x0 x --> Data__Product.{|_×_|} (univ.max univ.0 (univ.max a {|ℓ|})) (univ.max univ.0 (univ.max a {|ℓ|})) (AlmostLeftCancellative a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)) (AlmostRightCancellative a {|ℓ|} A (Agda.etaExpand (univ.max univ.0 (univ.max a (univ.s {|ℓ|}))) (Relation__Binary__Core.Rel a A {|ℓ|}) {|_≈_|}) (Agda.etaExpand a A x0) (Agda.etaExpand a (Algebra__Core.{|Op₂|} a A) x)).
 
def Interchangable : Agda.Term Agda.sortOmega (Agda.qLevel (a => Agda.sortOmega) (a => Agda.qLevel ({|ℓ|} => Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) ({|ℓ|} => Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Agda.code (Agda.set a)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max a (univ.s {|ℓ|})))) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Relation__Binary__Core.Rel a A {|ℓ|}) ({|_≈_|} => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max (univ.s a) (univ.s {|ℓ|})))) (Algebra__Core.{|Op₂|} a A) (_0 => (Agda.code (Agda.set (univ.max univ.0 (univ.max a {|ℓ|})))))))))))))).
[a, {|ℓ|}, A, {|_≈_|}, x0, x] Interchangable a {|ℓ|} A {|_≈_|} x0 x --> Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (w => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (x1 => (Agda.prod (Agda.set a) (Agda.set (univ.max univ.0 (univ.max a {|ℓ|}))) A (y => (Agda.prod (Agda.set a) (Agda.set {|ℓ|}) A ({|z|} => ({|_≈_|} (Agda.etaExpand a A (x0 (Agda.etaExpand a A (x (Agda.etaExpand a A w) (Agda.etaExpand a A x1))) (Agda.etaExpand a A (x (Agda.etaExpand a A y) (Agda.etaExpand a A {|z|}))))) (Agda.etaExpand a A (x (Agda.etaExpand a A (x0 (Agda.etaExpand a A w) (Agda.etaExpand a A y))) (Agda.etaExpand a A (x0 (Agda.etaExpand a A x1) (Agda.etaExpand a A {|z|}))))))))))))).
 
