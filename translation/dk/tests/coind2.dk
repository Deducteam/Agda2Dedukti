TYPE__Stream : (A : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> Type.
Stream : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.code (Agda.set univ.0)))).
[A] Agda.Term _ (Stream A) --> TYPE__Stream A.
{|!Stream'constructor|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (hd => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (tl => (Stream A))))))).
def Stream__hd : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (r => A)))).
def Stream__tl : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (r => (Stream A))))).

[A, y] Agda.etaExpand _ (Stream A) y --> y.
 
[A, hd, tl] Stream__hd A ({|!Stream'constructor|} A hd tl) --> Agda.etaExpand univ.0 A hd.
 
[A, hd, tl] Stream__tl A ({|!Stream'constructor|} A hd tl) --> tl.
 
def zeros : Agda.Term (Agda.set univ.0) (Stream Agda__Builtin__Nat.Nat).
[] Stream__hd {Agda__Builtin__Nat.Nat} zeros --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero.
[] Stream__tl {Agda__Builtin__Nat.Nat} zeros --> zeros.
 
{|!TYPE___≈_|} : (A : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> (xs : Agda.Term (Agda.set univ.0) (Stream A)) -> (ys : Agda.Term (Agda.set univ.0) (Stream A)) -> Type.
{|!_≈_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) (Stream A) (xs => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) (Stream A) (ys => (Agda.code (Agda.set univ.0)))))))).
[A, xs, ys] Agda.Term _ ({|!_≈_|} A xs ys) --> {|!TYPE___≈_|} A xs ys.
def {|!_≈___hd-≡|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (xs => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (ys => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) ({|!_≈_|} A xs ys) (r => (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A xs)) (Agda.etaExpand univ.0 A (Stream__hd A ys))))))))))).
def {|!_≈___tl-≈|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (xs => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (ys => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) ({|!_≈_|} A xs ys) (r => ({|!_≈_|} A (Stream__tl A xs) (Stream__tl A ys)))))))))).
{|!_≈_'constructor|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (xs => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (ys => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A xs)) (Agda.etaExpand univ.0 A (Stream__hd A ys))) ({|!hd-≡|} => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!_≈_|} A (Stream__tl A xs) (Stream__tl A ys)) ({|!tl-≈|} => ({|!_≈_|} A xs ys))))))))))).
[A, xs, ys, y] Agda.etaExpand _ ({|!_≈_|} A xs ys) y --> y.
 
[A, xs, ys, {|!hd-≡|}, {|!tl-≈|}] {|!_≈___hd-≡|} A xs ys ({|!_≈_'constructor|} A xs ys {|!hd-≡|} {|!tl-≈|}) --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A xs)) (Agda.etaExpand univ.0 A (Stream__hd A ys))) {|!hd-≡|}.
 
[A, xs, ys, {|!hd-≡|}, {|!tl-≈|}] {|!_≈___tl-≈|} A xs ys ({|!_≈_'constructor|} A xs ys {|!hd-≡|} {|!tl-≈|}) --> {|!tl-≈|}.
 

def {|!refl-≈|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) ({|!s|} => ({|!_≈_|} A {|!s|} {|!s|}))))).
[A, {|!s|}] {|!_≈___hd-≡|} A {|!s|} {|!s|} ({|!refl-≈|} A {|!s|}) --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A {|!s|})) (Agda.etaExpand univ.0 A (Stream__hd A {|!s|}))) (proofs2.{|!_≡___refl|} A (Agda.etaExpand univ.0 A (Stream__hd A {|!s|}))).
[A, {|!s|}] {|!_≈___tl-≈|} A {|!s|} {|!s|} ({|!refl-≈|} A {|!s|}) --> {|!refl-≈|} A (Stream__tl A {|!s|}).
 
def {|!trans-≈|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) ({|!z|} => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!_≈_|} A x y) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) ({|!_≈_|} A y {|!z|}) (_0 => ({|!_≈_|} A x {|!z|}))))))))))))).
[A, x1, y, {|!z|}, x0, x] {|!_≈___hd-≡|} A x1 {|!z|} ({|!trans-≈|} A x1 y {|!z|} x0 x) --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A x1)) (Agda.etaExpand univ.0 A (Stream__hd A {|!z|}))) (proofs2.trans A (Agda.etaExpand univ.0 A (Stream__hd A x1)) (Agda.etaExpand univ.0 A (Stream__hd A y)) (Agda.etaExpand univ.0 A (Stream__hd A {|!z|})) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A x1)) (Agda.etaExpand univ.0 A (Stream__hd A y))) ({|!_≈___hd-≡|} A x1 y x0)) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A (Stream__hd A y)) (Agda.etaExpand univ.0 A (Stream__hd A {|!z|}))) ({|!_≈___hd-≡|} A y {|!z|} x))).
[A, x1, y, {|!z|}, x0, x] {|!_≈___tl-≈|} A x1 {|!z|} ({|!trans-≈|} A x1 y {|!z|} x0 x) --> {|!trans-≈|} A (Stream__tl A x1) (Stream__tl A y) (Stream__tl A {|!z|}) ({|!_≈___tl-≈|} A x1 y x0) ({|!_≈___tl-≈|} A y {|!z|} x).
 
def {|!≡to≈|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (proofs2.{|!_≡_|} (Stream A) x y) (_0 => ({|!_≈_|} A x y))))))))).
[A, x] {|!≡to≈|} A x x (proofs2.{|!_≡___refl|} {Stream A} x) --> {|!refl-≈|} A x.
 
def {|!cong-≈|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => (Stream B))) (f => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A x) (Agda.etaExpand univ.0 A y)) (_0 => ({|!_≈_|} B (f (Agda.etaExpand univ.0 A x)) (f (Agda.etaExpand univ.0 A y))))))))))))))).
[A, B, x0, y, f, x] {|!_≈___hd-≡|} B {f (Agda.etaExpand univ.0 A x0)} {f (Agda.etaExpand univ.0 A y)} ({|!cong-≈|} A B x0 y f x) --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} B (Agda.etaExpand univ.0 B (Stream__hd B (f (Agda.etaExpand univ.0 A x0)))) (Agda.etaExpand univ.0 B (Stream__hd B (f (Agda.etaExpand univ.0 A y))))) (proofs2.cong A B (Agda.etaExpand univ.0 A x0) (Agda.etaExpand univ.0 A y) (x1 => Agda.etaExpand univ.0 B (Stream__hd B (f (Agda.etaExpand univ.0 A x1)))) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A x0) (Agda.etaExpand univ.0 A y)) x)).
[A, B, x0, y, f, x] {|!_≈___tl-≈|} B {f (Agda.etaExpand univ.0 A x0)} {f (Agda.etaExpand univ.0 A y)} ({|!cong-≈|} A B x0 y f x) --> {|!cong-≈|} (Stream B) B (f (Agda.etaExpand univ.0 A x0)) (f (Agda.etaExpand univ.0 A y)) (r => Stream__tl B r) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} (Stream B) (f (Agda.etaExpand univ.0 A x0)) (f (Agda.etaExpand univ.0 A y))) (proofs2.cong A (Stream B) (Agda.etaExpand univ.0 A x0) (Agda.etaExpand univ.0 A y) (_0 => f (Agda.etaExpand univ.0 A _0)) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} A (Agda.etaExpand univ.0 A x0) (Agda.etaExpand univ.0 A y)) x))).
 
def pos : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (_0 => A)))))).
[A, x] pos A Agda__Builtin__Nat.Nat__zero x --> Agda.etaExpand univ.0 A (Stream__hd A x).
[A, x0, x] pos A (Agda__Builtin__Nat.Nat__suc x0) x --> Agda.etaExpand univ.0 A (pos A (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat x0) (Stream__tl A x)).
 
def natS : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (_0 => (Stream Agda__Builtin__Nat.Nat))).
[x] Stream__hd {Agda__Builtin__Nat.Nat} (natS x) --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat x.
[x] Stream__tl {Agda__Builtin__Nat.Nat} (natS x) --> natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat x))).
 
def tailn : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream A) (_0 => (Stream A))))))).
[A, x] tailn A Agda__Builtin__Nat.Nat__zero x --> x.
[A, n, x] tailn A (Agda__Builtin__Nat.Nat__suc n) x --> Stream__tl A (tailn A (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) x).
 
def tailNatS : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => ({|!_≈_|} Agda__Builtin__Nat.Nat (tailn Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))))).
[] tailNatS Agda__Builtin__Nat.Nat__zero --> {|!refl-≈|} Agda__Builtin__Nat.Nat (tailn Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero))).
[n] tailNatS (Agda__Builtin__Nat.Nat__suc n) --> {|!_≈___tl-≈|} Agda__Builtin__Nat.Nat (tailn Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n)) (tailNatS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n)).
 
def plusS : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream Agda__Builtin__Nat.Nat) (_0 => (Stream Agda__Builtin__Nat.Nat))))).
[n, x] Stream__hd {Agda__Builtin__Nat.Nat} (plusS n x) --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat x))).
[n, x] Stream__tl {Agda__Builtin__Nat.Nat} (plusS n x) --> plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Stream__tl Agda__Builtin__Nat.Nat x).
 
def etaPlusS : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream Agda__Builtin__Nat.Nat) (x => ({|!_≈_|} Agda__Builtin__Nat.Nat x (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) x)))).
[x] {|!_≈___hd-≡|} {Agda__Builtin__Nat.Nat} x {plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) x} (etaPlusS x) --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat x)) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) x)))) (proofs2.{|!_≡___refl|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat x))).
[x] {|!_≈___tl-≈|} {Agda__Builtin__Nat.Nat} x {plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) x} (etaPlusS x) --> etaPlusS (Stream__tl Agda__Builtin__Nat.Nat x).
 
def {|!plusS+|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Stream Agda__Builtin__Nat.Nat) (x => ({|!_≈_|} Agda__Builtin__Nat.Nat (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) x) (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m) x))))))))).
[n, m, x] {|!_≈___hd-≡|} {Agda__Builtin__Nat.Nat} {plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) x} {plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m) x)} ({|!plusS+|} n m x) --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) x))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m) x))))) (proofs2.{|!+-assoc|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Stream__hd Agda__Builtin__Nat.Nat x))).
[n, m, x] {|!_≈___tl-≈|} {Agda__Builtin__Nat.Nat} {plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) x} {plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (plusS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m) x)} ({|!plusS+|} n m x) --> {|!plusS+|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m) (Stream__tl Agda__Builtin__Nat.Nat x).
 
def posNatS2 : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Stream__tl Agda__Builtin__Nat.Nat (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))))))))).
[m] posNatS2 Agda__Builtin__Nat.Nat__zero m --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (Stream__tl Agda__Builtin__Nat.Nat (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))))) (proofs2.{|!_≡___refl|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (Stream__tl Agda__Builtin__Nat.Nat (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))))).
[n, m] posNatS2 (Agda__Builtin__Nat.Nat__suc n) m --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (Stream__tl Agda__Builtin__Nat.Nat (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))))) (posNatS2 (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))).
 
def posNatS : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))))))))).
[m, n] posNatS m n --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))))) (proofs2.{|!_≡___refl|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))).
 
def {|!posNatS+|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))))))).
[m] {|!posNatS+|} Agda__Builtin__Nat.Nat__zero m --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (proofs2.{|!_≡___refl|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat__zero) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))).
[n, m] {|!posNatS+|} (Agda__Builtin__Nat.Nat__suc n) m --> Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (proofs2.trans Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))))))) (posNatS2 (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (proofs2.cong Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m))) (_0 => Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat _0))) (Agda.etaExpand univ.0 (proofs2.{|!_≡_|} Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (pos Agda__Builtin__Nat.Nat (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (natS (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))) ({|!posNatS+|} (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m)))))).
 
