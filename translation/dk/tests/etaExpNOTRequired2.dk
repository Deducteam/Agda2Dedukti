TYPE__R : Type.
R : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ R --> TYPE__R.
def R__n : Agda.Term (Agda.set univ.0) (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) R (r => Agda__Builtin__Nat.Nat)).
cons : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => R)).
[y] Agda.etaExpand _ R y --> cons (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (R__n y)).
 
[n] R__n (cons n) --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n.
 

def bla : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) R (x => (Agda__Builtin__Equality.{|!_≡_|} univ.0 R (Agda.etaExpand univ.0 R x) (Agda.etaExpand univ.0 R x)))).
[x] bla x --> Agda.etaExpand univ.0 (Agda__Builtin__Equality.{|!_≡_|} univ.0 R (Agda.etaExpand univ.0 R x) (Agda.etaExpand univ.0 R x)) (Agda__Builtin__Equality.{|!_≡___refl|} univ.0 R (Agda.etaExpand univ.0 R x)).
 
def bla2 : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => A)) (x => (Agda__Builtin__Equality.{|!_≡_|} univ.0 (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => A)) (_0 => Agda.etaExpand univ.0 A (x (Agda.etaExpand univ.0 A _0))) (_0 => Agda.etaExpand univ.0 A (x (Agda.etaExpand univ.0 A _0)))))))).
[A, x] bla2 A x --> Agda.etaExpand univ.0 (Agda__Builtin__Equality.{|!_≡_|} univ.0 (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => A)) (_0 => Agda.etaExpand univ.0 A (x (Agda.etaExpand univ.0 A _0))) (_0 => Agda.etaExpand univ.0 A (x (Agda.etaExpand univ.0 A _0)))) (Agda__Builtin__Equality.{|!_≡___refl|} univ.0 (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => A)) (_0 => Agda.etaExpand univ.0 A (x (Agda.etaExpand univ.0 A _0)))).
 
