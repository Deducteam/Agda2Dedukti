{|!TYPE__⊥|} : Type.
{|!⊥|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ {|!⊥|} --> {|!TYPE__⊥|}.

{|!TYPE__∨|} : (A : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> (B : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> Type.
{|!∨|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (B => (Agda.code (Agda.set univ.0)))))).
[A, B] Agda.Term _ ({|!∨|} A B) --> {|!TYPE__∨|} A B.
{|!∨__inl|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => ({|!∨|} A B))))))).
{|!∨__inr|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) B (_0 => ({|!∨|} A B))))))).



TYPE__Node : Type.
Node : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ Node --> TYPE__Node.
def Node__value : Agda.Term (Agda.set univ.0) (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) Node (r => Agda__Builtin__Nat.Nat)).
def Node__edge : Agda.Term (Agda.set univ.0) (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) Node (r => Node)).
{|!Node'constructor|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (value => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (edge => Node)))).

[value, edge] Node__value ({|!Node'constructor|} value edge) --> value.
 
[value, edge] Node__edge ({|!Node'constructor|} value edge) --> edge.
 

def g1 : Agda.Term (Agda.set univ.0) Node.
def g2 : Agda.Term (Agda.set univ.0) Node.
[] Node__value g1 --> Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero.
[] Node__edge g1 --> g2.
 
[] Node__value g2 --> Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero.
[] Node__edge g2 --> g1.
 
def g3 : Agda.Term (Agda.set univ.0) Node.
[] Node__value g3 --> Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero.
[] Node__edge g3 --> g3.
 
TYPE__Bissim : (A : Agda.Term (Agda.set univ.0) Node) -> (B : Agda.Term (Agda.set univ.0) Node) -> Type.
Bissim : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Node (A => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) Node (B => (Agda.code (Agda.set univ.0)))))).
[A, B] Agda.Term _ (Bissim A B) --> TYPE__Bissim A B.
def Bissim__eqv : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (B => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) (Bissim A B) (r => (Agda__Builtin__Equality.{|!_≡_|} univ.0 Agda__Builtin__Nat.Nat (Node__value A) (Node__value B)))))))).
def Bissim__eqt : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (B => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) (Bissim A B) (r => (Bissim (Node__edge A) (Node__edge B)))))))).
{|!Bissim'constructor|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Node (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda__Builtin__Equality.{|!_≡_|} univ.0 Agda__Builtin__Nat.Nat (Node__value A) (Node__value B)) (eqv => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Bissim (Node__edge A) (Node__edge B)) (eqt => (Bissim A B))))))))).

[A, B, eqv, eqt] Bissim__eqv A B ({|!Bissim'constructor|} A B eqv eqt) --> eqv.
 
[A, B, eqv, eqt] Bissim__eqt A B ({|!Bissim'constructor|} A B eqv eqt) --> eqt.
 

def bis1 : Agda.Term (Agda.set univ.0) (Bissim g1 g3).
def bis2 : Agda.Term (Agda.set univ.0) (Bissim g2 g3).
[] Bissim__eqv {g1} {g3} bis1 --> Agda__Builtin__Equality.{|!_≡___refl|} univ.0 Agda__Builtin__Nat.Nat (Node__value g1).
[] Bissim__eqt {g1} {g3} bis1 --> bis2.
 
[] Bissim__eqv {g2} {g3} bis2 --> Agda__Builtin__Equality.{|!_≡___refl|} univ.0 Agda__Builtin__Nat.Nat (Node__value g2).
[] Bissim__eqt {g2} {g3} bis2 --> bis1.
 
