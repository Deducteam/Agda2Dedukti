TYPE__false : Type.
false : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ false --> TYPE__false.

def fimp : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) false (_0 => A)))).

TYPE__exists : (A : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> (P : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.code (Agda.set univ.0))))) -> Type.
exists : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.code (Agda.set univ.0)))) (P => (Agda.code (Agda.set univ.0)))))).
[A, P] Agda.Term _ (exists A P) --> TYPE__exists A (_0 => P (Agda.etaExpand univ.0 A _0)).
exists__exintro : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.code (Agda.set univ.0)))) (P => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (a => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (P (Agda.etaExpand univ.0 A a)) (p => (exists A (_0 => P (Agda.etaExpand univ.0 A _0))))))))))).
[A, P, a, p] Agda.etaExpand _ (exists _ _) (exists__exintro A P a p) --> exists__exintro A (_0 => P (Agda.etaExpand univ.0 A _0)) (Agda.etaExpand univ.0 A a) (Agda.etaExpand univ.0 (P (Agda.etaExpand univ.0 A a)) p).
 

TYPE__or : (_0 : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> (_0 : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> Type.
or : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (_0 => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (_0 => (Agda.code (Agda.set univ.0)))))).
[x0, x] Agda.Term _ (or x0 x) --> TYPE__or x0 x.
or__orl : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (a => (or A B))))))).
or__orr : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) B (b => (or A B))))))).
[A, B, a] Agda.etaExpand _ (or _ _) (or__orl A B a) --> or__orl A B (Agda.etaExpand univ.0 A a).
[A, B, b] Agda.etaExpand _ (or _ _) (or__orr A B b) --> or__orr A B (Agda.etaExpand univ.0 B b).
 


TYPE__and : (_0 : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> (_0 : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> Type.
and : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (_0 => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (_0 => (Agda.code (Agda.set univ.0)))))).
[x0, x] Agda.Term _ (and x0 x) --> TYPE__and x0 x.
and__inand : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (a => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) B (b => (and A B))))))))).
[A, B, a, b] Agda.etaExpand _ (and _ _) (and__inand A B a b) --> and__inand A B (Agda.etaExpand univ.0 A a) (Agda.etaExpand univ.0 B b).
 

TYPE__N : Type.
N : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ N --> TYPE__N.
N__zero : Agda.Term (Agda.set univ.0) N.
N__suc : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (_0 => N)).
[] Agda.etaExpand _ N N__zero --> N__zero.
[x] Agda.etaExpand _ N (N__suc x) --> N__suc (Agda.etaExpand univ.0 N x).
 


TYPE__Neq : (_0 : Agda.Term (Agda.set univ.0) N) -> (_0 : Agda.Term (Agda.set univ.0) N) -> Type.
Neq : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) N (_0 => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) N (_0 => (Agda.code (Agda.set univ.0)))))).
[x0, x] Agda.Term _ (Neq x0 x) --> TYPE__Neq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N x).
Neq__refl : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N x)))).
[x] Agda.etaExpand _ (Neq _ _) (Neq__refl x) --> Neq__refl (Agda.etaExpand univ.0 N x).
 

def cong : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (_0 => N)) (f => (Neq (Agda.etaExpand univ.0 N (f (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (f (Agda.etaExpand univ.0 N y)))))))))))).
[x, f] cong x {Agda.etaExpand univ.0 N x} (Neq__refl {Agda.etaExpand univ.0 N x}) f --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (f (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (f (Agda.etaExpand univ.0 N x)))) (Neq__refl (Agda.etaExpand univ.0 N (f (Agda.etaExpand univ.0 N x)))).
 
def sym : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => (Neq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)))))))).
[x] sym x {Agda.etaExpand univ.0 N x} (Neq__refl {Agda.etaExpand univ.0 N x}) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N x)) (Neq__refl (Agda.etaExpand univ.0 N x)).
 
def trs : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N ({|!z|} => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|})) (_0 => (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N {|!z|})))))))))))).
[x] trs x {Agda.etaExpand univ.0 N x} {Agda.etaExpand univ.0 N x} (Neq__refl {Agda.etaExpand univ.0 N x}) (Neq__refl {Agda.etaExpand univ.0 N x}) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N x)) (Neq__refl (Agda.etaExpand univ.0 N x)).
 
def suc0 : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) (_0 => false)))).

def sum : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (_0 => N)))).
[x] sum N__zero x --> Agda.etaExpand univ.0 N x.
[x0, x] sum (N__suc x0) x --> Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N x)))).
 
def sum0 : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N N__zero)))))).
[] sum0 N__zero --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)))) (Neq__refl (Agda.etaExpand univ.0 N N__zero)).
[x] sum0 (N__suc x) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)))) (cong (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N N__zero)))) (sum0 (Agda.etaExpand univ.0 N x))) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0)))).
 
def sumassos : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N ({|!z|} => (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))))))))).
def {|!with-138|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N ({|!z|} => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))) (w => (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))))))))))))).
[y, {|!z|}] sumassos N__zero y {|!z|} --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))) (Neq__refl (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|})))).
[x, y, {|!z|}] sumassos (N__suc x) y {|!z|} --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))) ({|!with-138|} (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))) (sumassos (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|})))).
 
[x, y, {|!z|}, w] {|!with-138|} x y {|!z|} w --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|}))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N {|!z|}))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N {|!z|})))) w) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0)))).
 
def sumcom : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)))))))).
[] sumcom N__zero N__zero --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)))) (Neq__refl (Agda.etaExpand univ.0 N N__zero)).
[y] sumcom N__zero (N__suc y) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero)))) (sum0 (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))).
[x] sumcom (N__suc x) N__zero --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (sym (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)))) (sum0 (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))).
[x, y] sumcom (N__suc x) (N__suc y) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x)))) (sumcom (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))) (sumcom (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (sumcom (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))))))) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0)))).
 
def mult : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (_0 => N)))).
[x] mult N__zero x --> Agda.etaExpand univ.0 N N__zero.
[x0, x] mult (N__suc x0) x --> Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N x)))).
 
def mult0 : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N N__zero)))))).
[] mult0 N__zero --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)))) (Neq__refl (Agda.etaExpand univ.0 N N__zero)).
[x] mult0 (N__suc x) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)))) (mult0 (Agda.etaExpand univ.0 N x)).
 
def multcom : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)))))))).
[] multcom N__zero N__zero --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)))) (Neq__refl (Agda.etaExpand univ.0 N N__zero)).
[y] multcom N__zero (N__suc y) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero)))) (mult0 (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))).
[x] multcom (N__suc x) N__zero --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (sym (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)))) (mult0 (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))).
[x, y] multcom (N__suc x) (N__suc y) --> Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x)))))) (cong (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x)))) (multcom (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (_0 => Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N _0))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)))))) (sumassos (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)))))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))) (sumcom (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (a => Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))) (cong (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))) (multcom (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x))) (_0 => Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N _0))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))))) (sym (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))))) (sumassos (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))))) (cong (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (multcom (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))) (_0 => Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N _0))))))))) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0)))).
 
TYPE__Nleq : (_0 : Agda.Term (Agda.set univ.0) N) -> (_0 : Agda.Term (Agda.set univ.0) N) -> Type.
Nleq : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) N (_0 => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) N (_0 => (Agda.code (Agda.set univ.0)))))).
[x0, x] Agda.Term _ (Nleq x0 x) --> TYPE__Nleq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N x).
Nleq__0leq : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N x)))).
Nleq__Sleq : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))))))))).
[x] Agda.etaExpand _ (Nleq _ _) (Nleq__0leq x) --> Nleq__0leq (Agda.etaExpand univ.0 N x).
[x0, y, x] Agda.etaExpand _ (Nleq _ _) (Nleq__Sleq x0 y x) --> Nleq__Sleq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y)) x).
 


def exm : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (or (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => false))))))).
def {|!with-226|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (or (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => false))) (w => (or (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false))))))))).
def {|!'extendedlambda0|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => false)) (b => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false)))))))).
def {|!'absurdlambda-2941|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) (_0 => false)))).
[y] exm N__zero y --> Agda.etaExpand univ.0 (or (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (_0 => false))) (or__orl (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (_0 => false)) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (Nleq__0leq (Agda.etaExpand univ.0 N y)))).
[x] exm (N__suc x) N__zero --> Agda.etaExpand univ.0 (or (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) (_0 => false))) (or__orr (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) (_0 => false)) (_0 => Agda.etaExpand univ.0 false ({|!'absurdlambda-2941|} (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N N__zero)) _0)))).
[x, y] exm (N__suc x) (N__suc y) --> Agda.etaExpand univ.0 (or (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false))) ({|!with-226|} (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (or (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => false))) (exm (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)))).
 
[x, y, a] {|!with-226|} x y (or__orl {Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)} {Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => false)} a) --> Agda.etaExpand univ.0 (or (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false))) (or__orl (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false)) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq__Sleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) a)))).
[x, y, b] {|!with-226|} x y (or__orr {Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)} {Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => false)} b) --> Agda.etaExpand univ.0 (or (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false))) (or__orr (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (_0 => false)) (_0 => Agda.etaExpand univ.0 false ({|!'extendedlambda0|} (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (_00 => Agda.etaExpand univ.0 false (b (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) _00))) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) _0)))).
 
[x0, y, b, x] {|!'extendedlambda0|} x0 y b (Nleq__Sleq {Agda.etaExpand univ.0 N x0} {Agda.etaExpand univ.0 N y} x) --> Agda.etaExpand univ.0 false (b (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y)) x)).
 

def strictornot : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (_0 => (or (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))))))))).
def {|!with-266|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (p => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (or (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y))) (w => (or (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))))))))))).
[x] strictornot N__zero N__zero x --> Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero))) (or__orl (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero)) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)) (Neq__refl (Agda.etaExpand univ.0 N N__zero)))).
[y, x] strictornot N__zero (N__suc y) x --> Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (or__orr (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq__Sleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (Nleq__0leq (Agda.etaExpand univ.0 N y)))))).
[x0, y, x] strictornot (N__suc x0) (N__suc y) (Nleq__Sleq {Agda.etaExpand univ.0 N x0} {Agda.etaExpand univ.0 N y} x) --> Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x0))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x0))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) ({|!with-266|} (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y)) x) (Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x0))) (Agda.etaExpand univ.0 N y))) (strictornot (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N x0) (Agda.etaExpand univ.0 N y)) x)))).
 
[x, p] {|!with-266|} x {Agda.etaExpand univ.0 N x} p (or__orl {Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N x)} {Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N x)} (Neq__refl {Agda.etaExpand univ.0 N x})) --> Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (or__orl (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))) (Neq__refl (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))).
[x, y, p, b] {|!with-266|} x y p (or__orr {Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y)} {Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y)} b) --> Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (or__orr (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq__Sleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N y)) b)))).
 
def minus : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)) (p => (exists N (a => Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))))))))).
def {|!with-304|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)) (p => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (exists N (a => Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (w => (exists N (a => Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))))))))))))).
[p] minus N__zero N__zero p --> Agda.etaExpand univ.0 (exists N (a => Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N a))))) (exists__exintro N (a => Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N a)))) (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)))) (Neq__refl (Agda.etaExpand univ.0 N N__zero)))).
[x, p] minus (N__suc x) N__zero p --> Agda.etaExpand univ.0 (exists N (a => Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N a))))) (exists__exintro N (a => Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N a)))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))) (Neq__refl (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x)))))).
[x, y, p] minus (N__suc x) (N__suc y) (Nleq__Sleq {Agda.etaExpand univ.0 N y} {Agda.etaExpand univ.0 N x} p) --> Agda.etaExpand univ.0 (exists N (a => Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))))) ({|!with-304|} (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)) p) (Agda.etaExpand univ.0 (exists N (a => Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (minus (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N x)) p)))).
 
[x, y, p0, a, p] {|!with-304|} x y p0 (exists__exintro {N} {a0 => Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a0)))} a p) --> Agda.etaExpand univ.0 (exists N (a0 => Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a0))))))) (exists__exintro N (a0 => Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a0)))))) (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))))) (cong (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))) p) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0)))))).
 
def euclid : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero)) (_0 => false)) (p => (exists N (p => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p))) (Agda.etaExpand univ.0 N r))))))))))))).
def {|!with-344|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero)) (_0 => false)) (p => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (w => (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))))))))))).
def {|!with-362|} : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (a2 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 N y)) (b1 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (or (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 N y)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))) (Agda.etaExpand univ.0 N y))) (w => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero)) (_0 => false)) (p => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) N (a => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N a2)))) (b2 => (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))))))))))))))))))).
[x, p] euclid x N__zero p --> Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N N__zero)) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (fimp (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N N__zero)) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (Agda.etaExpand univ.0 false (p (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N N__zero)) (Neq__refl (Agda.etaExpand univ.0 N N__zero)))))).
[y, p] euclid N__zero (N__suc y) p --> Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (exists__exintro N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r)))))) (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 (exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N r)))))) (exists__exintro N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N r))))) (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 (and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero))))) (and__inand (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero)))) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq__Sleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (Nleq__0leq (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero)))) (trs (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero)))) (mult0 (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N N__zero)))) (sum0 (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero)))))))))))).
[x, y, p] euclid (N__suc x) (N__suc y) p --> Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) ({|!with-344|} (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (_0 => Agda.etaExpand univ.0 false (p (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero)) _0))) (Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (euclid (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (_0 => Agda.etaExpand univ.0 false (p (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N N__zero)) _0)))))).
 
[x, y, p, a1, a0, a, b] {|!with-344|} x y p (exists__exintro {N} {p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r)))))} a1 (exists__exintro {N} {r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a1))) (Agda.etaExpand univ.0 N r))))} a0 (and__inand {Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a0))) (Agda.etaExpand univ.0 N y)} {Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a1))) (Agda.etaExpand univ.0 N a0)))} a b))) --> Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) ({|!with-362|} (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a0) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a0))) (Agda.etaExpand univ.0 N y)) a) (Agda.etaExpand univ.0 (or (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a0))) (Agda.etaExpand univ.0 N y)) (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a0))))) (Agda.etaExpand univ.0 N y))) (strictornot (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a0))) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a0))) (Agda.etaExpand univ.0 N y)) a))) (Agda.etaExpand univ.0 N x) (_0 => Agda.etaExpand univ.0 false (p (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N N__zero)) _0))) (Agda.etaExpand univ.0 N a1) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a1))) (Agda.etaExpand univ.0 N a0)))) b)).
 
[y, b1, p, a] {|!with-362|} (N__suc y) {Agda.etaExpand univ.0 N y} b1 (or__orl {Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))} {Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))} (Neq__refl {Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))})) {Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))} p a (Neq__refl {Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))}) --> Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (exists__exintro N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r)))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 (exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N r)))))) (exists__exintro N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N r))))) (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 (and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N N__zero))))) (and__inand (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N N__zero)))) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y)))) (Nleq__Sleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N N__zero) (Agda.etaExpand univ.0 N y)) (Nleq__0leq (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N N__zero)))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N N__zero)))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N N__zero))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a)))))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y)))))) (sym (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N y)))) (sumassos (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a)))))))) (cong (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a)))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))))) (sumcom (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a)))))) (trs (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N y)))))) (cong (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N y))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N y)))) (multcom (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (_0 => Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N _0))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N y))))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a)))))) (multcom (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N y))))))) (_0 => Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N _0))))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N N__zero)))) (sum0 (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a))))))))))) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0)))))))))).
[y, a2, b1, b, x, p, a, b2] {|!with-362|} y a2 b1 (or__orr {Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 N y)} {Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))) (Agda.etaExpand univ.0 N y)} b) x p a b2 --> Agda.etaExpand univ.0 (exists N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r))))))) (exists__exintro N (p0 => exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N p0))) (Agda.etaExpand univ.0 N r)))))) (Agda.etaExpand univ.0 N a) (Agda.etaExpand univ.0 (exists N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N r)))))) (exists__exintro N (r => and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N r))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N r))))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 (and (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))))) (and__inand (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))) (Agda.etaExpand univ.0 N y)) (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2)))))) (Agda.etaExpand univ.0 (Nleq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))) (Agda.etaExpand univ.0 N y)) b) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2)))))) (trs (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N x))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))))))) (cong (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))))) (trs (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N x) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N a2)))) b2) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))))) (sumcom (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N a2))))) (_0 => Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N _0))))) (Agda.etaExpand univ.0 (Neq (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N a2) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))))))) (Agda.etaExpand univ.0 N (sum (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a))) (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2)))))) (sumcom (Agda.etaExpand univ.0 N (N__suc (Agda.etaExpand univ.0 N a2))) (Agda.etaExpand univ.0 N (mult (Agda.etaExpand univ.0 N y) (Agda.etaExpand univ.0 N a)))))))))))).
 
