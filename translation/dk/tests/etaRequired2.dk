{|!TYPE___≡_|} : (A : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> (_0 : Agda.Term (Agda.set univ.0) A) -> (_0 : Agda.Term (Agda.set univ.0) A) -> Type.
{|!_≡_|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.code (Agda.set univ.0)))))))).
[A, x0, x] Agda.Term _ ({|!_≡_|} A x0 x) --> {|!TYPE___≡_|} A (Agda.etaExpand univ.0 A x0) (Agda.etaExpand univ.0 A x).
{|!_≡___refl|} : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (a => ({|!_≡_|} A (Agda.etaExpand univ.0 A a) (Agda.etaExpand univ.0 A a)))))).
[A, a] Agda.etaExpand _ ({|!_≡_|} _ _ _) ({|!_≡___refl|} A a) --> {|!_≡___refl|} A (Agda.etaExpand univ.0 A a).
 

TYPE__Unit : Type.
Unit : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ Unit --> TYPE__Unit.
{|!Unit'constructor|} : Agda.Term (Agda.set univ.0) Unit.
[y] Agda.etaExpand _ Unit y --> {|!Unit'constructor|}.
 

def pro : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Unit (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Unit (y => ({|!_≡_|} Unit (Agda.etaExpand univ.0 Unit x) (Agda.etaExpand univ.0 Unit y)))))).
[x, y] pro x y --> Agda.etaExpand univ.0 ({|!_≡_|} Unit (Agda.etaExpand univ.0 Unit x) (Agda.etaExpand univ.0 Unit y)) ({|!_≡___refl|} Unit (Agda.etaExpand univ.0 Unit {|!Unit'constructor|})).
 
TYPE__Uni : Type.
Uni : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ Uni --> TYPE__Uni.
Uni__I : Agda.Term (Agda.set univ.0) Uni.
[] Agda.etaExpand _ Uni Uni__I --> Uni__I.
 

