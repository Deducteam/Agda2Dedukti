TYPE__Box : Type.
Box : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ Box --> TYPE__Box.
def Box__openBox : Agda.Term (Agda.set univ.0) (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) Box (r => Agda__Builtin__Nat.Nat)).
cons : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (openBox => Box)).
[y] Agda.etaExpand _ Box y --> cons (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Box__openBox y)).
 
[openBox] Box__openBox (cons openBox) --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat openBox.
 

def b1 : Agda.Term (Agda.set univ.0) Box.
[] b1 --> Agda.etaExpand univ.0 Box (cons (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc Agda__Builtin__Nat.Nat__zero))))).
 
def b2 : Agda.Term (Agda.set univ.0) Box.

