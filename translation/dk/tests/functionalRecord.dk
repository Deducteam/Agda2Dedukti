TYPE__r : Type.
r : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)).
[] Agda.Term _ r --> TYPE__r.
def r__n : Agda.Term (Agda.set univ.0) (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) r (r => Agda__Builtin__Nat.Nat)).
def r__m : Agda.Term (Agda.set univ.0) (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) r (r => Agda__Builtin__Nat.Nat)).
cons : Agda.Term (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (n => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) Agda__Builtin__Nat.Nat (m => r)))).
[y] Agda.etaExpand _ r y --> cons (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (r__n y)) (Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (r__m y)).
 
[n, m] r__n (cons n m) --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat n.
 
[n, m] r__m (cons n m) --> Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat m.
 

TYPE__rr : (A : Agda.Term (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0))) -> Type.
rr : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.code (Agda.set univ.0)))).
[A] Agda.Term _ (rr A) --> TYPE__rr A.
def rr__nn : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) (rr A) (r => A)))).
def rr__mm : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.proj_prod (Agda.set univ.0) (Agda.set univ.0) (rr A) (r => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => Agda__Builtin__Nat.Nat)))))).
conss : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (nn => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => Agda__Builtin__Nat.Nat)) (mm => (rr A))))))).
[A, y] Agda.etaExpand _ (rr A) y --> conss A (Agda.etaExpand univ.0 A (rr__nn A y)) (_0 : Agda.Term (Agda.set univ.0) A => Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (rr__mm A y (Agda.etaExpand univ.0 A _0))).
 
[A, nn, mm] rr__nn A (conss A nn mm) --> Agda.etaExpand univ.0 A nn.
 
[A, nn, mm] rr__mm A (conss A nn mm) --> _0 => Agda.etaExpand univ.0 Agda__Builtin__Nat.Nat (mm (Agda.etaExpand univ.0 A _0)).
 

